types OVERRIDE
{
	type dlc_button = button {
		datacontext = "[DlcItem.GetDlc]"
		size = "[Dlc.GetIconSize]"
		texture = "[Dlc.GetIcon]"
		onclick = "[DlcItem.ShowInStore]"
		tooltip = "ELF_DLC_BUTTON_TOOLTIP"
		using = tooltip_nw

		modify_texture = {
			# visible = "[Not( Dlc.IsEnabled )]"
			visible = "[Not(Or(Dlc.IsEnabled, EqualTo_string(DlcItem.GetDlc.GetName, 'Elf Destiny')))]"
			texture = "gfx/interface/colors/black.dds"
			blend_mode = normal
			alpha = 0.4
		}
	}

	type vbox_maa_stats = vbox {
		margin_bottom = 5

		background = {
			using = Background_Area_With_Header
		}

		hbox = {
			layoutpolicy_horizontal = expanding
			margin =  { 10 2 }

			text_single = {
				name = "title"
				text = "[MenAtArmsType.GetNameNoTooltip]"
				using = Font_Size_Medium

			}

			expand = {}

			hbox = {
				tooltip = "MV_CREATE_REGIMENT_MAX_SIZE_TT"
				using = tooltip_ne

				icon = {
					name = "icon_maa"
					texture = [MenAtArmsType.GetIcon]
					size = { 30 30 }
				}

				text_single = {
					name = "soldier count"
					text = "MV_CREATE_REGIMENT_SIZE"
				}
			}
		}

		vbox_maa_stats_numbers_old_version = {
			visible = "[Not(IsMixedSiegeAndFighterMAA)]"
			layoutpolicy_horizontal = expanding
		}

		vbox_maa_stats_numbers = {
			visible = "[IsMixedSiegeAndFighterMAA]"
			layoutpolicy_horizontal = expanding
		}

		block "type_text"
		{
			hbox_maa_type_text = {
				layoutpolicy_horizontal = expanding
			}
		}
	}

	# Requires MenAtArmsType data context
	type vbox_maa_stats_numbers_old_version = vbox_maa_stats_numbers_base_original_version
	{
		datacontext = "[GetNullProvince]"
		datacontext = "[GetNullLandedTitle]"
	}

	# Requires MenAtArmsType data context
	type vbox_maa_stats_numbers = vbox_maa_stats_numbers_base
	{
		datacontext = "[GetNullProvince]"
		datacontext = "[GetNullLandedTitle]"
	}

	type vbox_maa_stats_numbers_base = vbox {
		vbox = {
			visible = "[IsMixedSiegeAndFighterMAA]"
			layoutpolicy_horizontal = expanding
			margin = { 15 0 }
			margin_bottom = 5

			background = {
				using = Background_Area
				margin = { 3 3 }
				margin_right = 7
			}

			hbox = {
				layoutpolicy_horizontal = expanding
				block "siege_tt"
				{
					tooltip = "REGIMENT_SIEGE_TT"
				}
				using = tooltip_se
				spacing = 3
				margin_left = -5

				icon = {
					block "siege_icon_size"
					{
						size = { 55 55 }
					}
					texture = "gfx/interface/icons/regimenttypes/unit_stat_siege_progress.dds"
				}

				text_single = {
					block "siege_stat"
					{
						text = "REGIMENT_SIEGE"
					}
					using = Font_Size_Medium
					align = nobaseline
					min_width = 25
				}

				expand = {}
			}

			block "siege_effective_level"
			{
				text_single = {
					layoutpolicy_horizontal = expanding
					name = "siege_tier"
					text = "REGIMENT_SIEGE_MAX_FORT_LEVEL"
					align = left
				}
			}
		}

		hbox = {
			name = "stats"
			visible = "[MenAtArmsType.FightsInMainPhase]"
			layoutpolicy_horizontal = expanding
			margin = { 5 5 }

			background = {
				using = Background_Area
			}

			block "stat_spacing"
			{
			}

			hbox = {
				block "damage_tt"
				{
					tooltip = "REGIMENT_DAMAGE_TT"
				}
				using = tooltip_se
				spacing = 3

				icon = {
					name = "icon"
					block "stat_icon_size"
					{
						size = { 40 40 }
					}
					texture = "gfx/interface/icons/regimenttypes/unit_stat_damage.dds"
				}

				text_single = {
					name = "label"
					block "damage_stat"
					{
						text = "[MenAtArmsType.GetStat( GetPlayer, Province.Self, Title.Self, 'damage' )|0]"
					}
					default_format = "#high"
					using = Font_Size_Medium
					align = nobaseline
					min_width = 25
				}
			}

			hbox = {
				block "toughness_tt"
				{
					tooltip = "REGIMENT_TOUGHNESS_TT"
				}
				using = tooltip_se
				spacing = 3

				icon = {
					name = "icon"
					block "stat_icon_size"
					{
						size = { 40 40 }
					}
					texture = "gfx/interface/icons/regimenttypes/unit_stat_toughness.dds"
				}

				text_single = {
					name = "label"
					block "toughness_stat"
					{
						text = "[MenAtArmsType.GetStat( GetPlayer, Province.Self, Title.Self, 'toughness' )|0]"
					}
					default_format = "#high"
					using = Font_Size_Medium
					align = nobaseline
					min_width = 25
				}
			}

			hbox = {
				block "pursuit_tt"
				{
					tooltip = "REGIMENT_PURSUIT_TT"
					# fade out if 0
					alpha = "[Select_float(GreaterThan_CFixedPoint(MenAtArmsType.GetStat( GetPlayer, Province.Self, Title.Self, 'pursuit' ),'(CFixedPoint)0'), '(float)1.0','(float)0.4')]"
				}
				using = tooltip_se
				spacing = 3


				icon = {
					name = "icon"
					block "stat_icon_size"
					{
						size = { 40 40 }
					}
					texture = "gfx/interface/icons/regimenttypes/unit_stat_pursuit.dds"
				}

				text_single = {
					name = "label"
					block "pursuit_stat"
					{
						text = "[MenAtArmsType.GetStat( GetPlayer, Province.Self, Title.Self, 'pursuit' )|0]"
					}
					default_format = "#high"
					using = Font_Size_Medium
					align = nobaseline
					min_width = 25
				}
			}

			hbox = {
				block "screen_tt"
				{
					tooltip = "REGIMENT_SCREEN_TT"
					# fade out if 0
					alpha = "[Select_float(GreaterThan_CFixedPoint(MenAtArmsType.GetStat( GetPlayer, Province.Self, Title.Self, 'screen' ),'(CFixedPoint)0'), '(float)1.0','(float)0.4')]"
				}
				using = tooltip_se
				spacing = 3

				icon = {
					name = "icon"
					block "stat_icon_size"
					{
						size = { 40 40 }
					}
					texture = "gfx/interface/icons/regimenttypes/unit_stat_screen.dds"
				}

				text_single = {
					name = "label"
					block "screen_stat"
					{
						text = "[MenAtArmsType.GetStat( GetPlayer, Province.Self, Title.Self, 'screen' )|0]"
					}
					default_format = "#high"
					using = Font_Size_Medium
					align = nobaseline
					min_width = 25
				}
			}
			
			hbox = {
				visible = "[GreaterThan_CFixedPoint(MenAtArmsType.GetStat(GetPlayer, Province.Self, Title.Self, 'siege_value'), '(CFixedPoint)0')]"
				block "siege_tt"
				{
					tooltip = "REGIMENT_SIEGE_TT"
				}
				using = tooltip_se
				spacing = 3
				margin_right = 5

				icon = {
					block "siege_icon_size"
					{
						size = { 40 40 }
					}
					texture = "gfx/interface/icons/regimenttypes/unit_stat_siege_progress.dds"
				}

				text_single = {
					block "siege_stat"
					{
						text = "[MenAtArmsType.GetStat( GetPlayer, Province.Self, Title.Self, 'siege_value' )|1]"
					}
					default_format = "#high"
					using = Font_Size_Medium
					align = nobaseline
					min_width = 25
				}
			}
		}
	}

	type vbox_maa_stats_numbers_base_original_version = vbox {
		vbox = {
			visible = "[Not( MenAtArmsType.FightsInMainPhase )]"
			layoutpolicy_horizontal = expanding
			margin = { 15 0 }
			margin_bottom = 5

			background = {
				using = Background_Area
				margin = { 3 3 }
				margin_right = 7
			}

			hbox = {
				layoutpolicy_horizontal = expanding
				block "siege_tt"
				{
					tooltip = "REGIMENT_SIEGE_TT"
				}
				using = tooltip_se
				spacing = 3
				margin_left = -5

				icon = {
					block "siege_icon_size"
					{
						size = { 55 55 }
					}
					texture = "gfx/interface/icons/regimenttypes/unit_stat_siege_progress.dds"
				}

				text_single = {
					block "siege_stat"
					{
						text = "REGIMENT_SIEGE"
					}
					using = Font_Size_Medium
					align = nobaseline
					min_width = 25
				}

				expand = {}
			}

			block "siege_effective_level"
			{
				text_single = {
					layoutpolicy_horizontal = expanding
					name = "siege_tier"
					text = "REGIMENT_SIEGE_MAX_FORT_LEVEL"
					align = left
				}
			}
		}

		hbox = {
			name = "stats"
			visible = "[MenAtArmsType.FightsInMainPhase]"
			layoutpolicy_horizontal = expanding
			margin = { 5 5 }

			background = {
				using = Background_Area
			}

			block "stat_spacing"
			{
			}

			hbox = {
				block "damage_tt"
				{
					tooltip = "REGIMENT_DAMAGE_TT"
				}
				using = tooltip_se
				spacing = 3

				icon = {
					name = "icon"
					block "stat_icon_size"
					{
						size = { 40 40 }
					}
					texture = "gfx/interface/icons/regimenttypes/unit_stat_damage.dds"
				}

				text_single = {
					name = "label"
					block "damage_stat"
					{
						text = "[MenAtArmsType.GetStat( GetPlayer, Province.Self, Title.Self, 'damage' )|0]"
					}
					default_format = "#high"
					using = Font_Size_Medium
					align = nobaseline
					min_width = 25
				}
			}

			hbox = {
				block "toughness_tt"
				{
					tooltip = "REGIMENT_TOUGHNESS_TT"
				}
				using = tooltip_se
				spacing = 3

				icon = {
					name = "icon"
					block "stat_icon_size"
					{
						size = { 40 40 }
					}
					texture = "gfx/interface/icons/regimenttypes/unit_stat_toughness.dds"
				}

				text_single = {
					name = "label"
					block "toughness_stat"
					{
						text = "[MenAtArmsType.GetStat( GetPlayer, Province.Self, Title.Self, 'toughness' )|0]"
					}
					default_format = "#high"
					using = Font_Size_Medium
					align = nobaseline
					min_width = 25
				}
			}

			hbox = {
				block "pursuit_tt"
				{
					tooltip = "REGIMENT_PURSUIT_TT"
					# fade out if 0
					alpha = "[Select_float(GreaterThan_CFixedPoint(MenAtArmsType.GetStat( GetPlayer, Province.Self, Title.Self, 'pursuit' ),'(CFixedPoint)0'), '(float)1.0','(float)0.4')]"
				}
				using = tooltip_se
				spacing = 3


				icon = {
					name = "icon"
					block "stat_icon_size"
					{
						size = { 40 40 }
					}
					texture = "gfx/interface/icons/regimenttypes/unit_stat_pursuit.dds"
				}

				text_single = {
					name = "label"
					block "pursuit_stat"
					{
						text = "[MenAtArmsType.GetStat( GetPlayer, Province.Self, Title.Self, 'pursuit' )|0]"
					}
					default_format = "#high"
					using = Font_Size_Medium
					align = nobaseline
					min_width = 25
				}
			}

			hbox = {
				block "screen_tt"
				{
					tooltip = "REGIMENT_SCREEN_TT"
					# fade out if 0
					alpha = "[Select_float(GreaterThan_CFixedPoint(MenAtArmsType.GetStat( GetPlayer, Province.Self, Title.Self, 'screen' ),'(CFixedPoint)0'), '(float)1.0','(float)0.4')]"
				}
				using = tooltip_se
				spacing = 3

				icon = {
					name = "icon"
					block "stat_icon_size"
					{
						size = { 40 40 }
					}
					texture = "gfx/interface/icons/regimenttypes/unit_stat_screen.dds"
				}

				text_single = {
					name = "label"
					block "screen_stat"
					{
						text = "[MenAtArmsType.GetStat( GetPlayer, Province.Self, Title.Self, 'screen' )|0]"
					}
					default_format = "#high"
					using = Font_Size_Medium
					align = nobaseline
					min_width = 25
				}
			}
			
			hbox = {
				visible = "[GreaterThan_CFixedPoint(MenAtArmsType.GetStat(GetPlayer, Province.Self, Title.Self, 'siege_value'), '(CFixedPoint)0')]"
				block "siege_tt"
				{
					tooltip = "REGIMENT_SIEGE_TT"
				}
				using = tooltip_se
				spacing = 3
				margin_right = 5

				icon = {
					block "siege_icon_size"
					{
						size = { 40 40 }
					}
					texture = "gfx/interface/icons/regimenttypes/unit_stat_siege_progress.dds"
				}

				text_single = {
					block "siege_stat"
					{
						text = "[MenAtArmsType.GetStat( GetPlayer, Province.Self, Title.Self, 'siege_value' )|1]"
					}
					default_format = "#high"
					using = Font_Size_Medium
					align = nobaseline
					min_width = 25
				}
			}
		}
	}

	# Why?: We are overriding the unit icon when showing aeluran reinforcements
	type widget_event_troop_item = widget {
		size = { 505 130 }

		background = {
			using = Background_Area
		}

		vbox = {
			hbox  = {
				name = "header"
				layoutpolicy_horizontal = expanding

				margin = { 0 5 }
				margin_left = 7

				background = {
					using = Background_Area
				}

				icon = {
					# visible = "[Not(EqualTo_string(MilitaryViewEventTroop.GetName, Localize('stationed_aeluran_magi')))]"
					visible = "[And(Not(EqualTo_string(MilitaryViewEventTroop.GetName, Localize('stationed_aeluran_magi_1'))) , And(Not(EqualTo_string(MilitaryViewEventTroop.GetName, Localize('stationed_aeluran_magi_2'))), Not(EqualTo_string(MilitaryViewEventTroop.GetName, Localize('stationed_aeluran_magi_3')))))]"

					name = "event_troops"
					texture = "gfx/interface/icons/icon_special_troops.dds"
					size = { 36 36 }
				}

				icon = {
					visible = "[EqualTo_string(MilitaryViewEventTroop.GetName, Localize('stationed_aeluran_magi_1'))]"
					name = "event_troops_aeluran_1"
					texture = "gfx/interface/icons/regimenttypes/stationed_aeluran_magi_1.dds"
					
					size = { 36 36 }
				}

				icon = {
					visible = "[EqualTo_string(MilitaryViewEventTroop.GetName, Localize('stationed_aeluran_magi_2'))]"
					name = "event_troops_aeluran_2"
					texture = "gfx/interface/icons/regimenttypes/stationed_aeluran_magi_2.dds"
					
					size = { 36 36 }
				}

				icon = {
					visible = "[EqualTo_string(MilitaryViewEventTroop.GetName, Localize('stationed_aeluran_magi_3'))]"
					name = "event_troops_aeluran_3`"
					texture = "gfx/interface/icons/regimenttypes/stationed_aeluran_magi_3.dds"
					
					size = { 36 36 }
				}

				spacer = {
					size = { 5 0 }
				}

				text_single = {
					text = "[MilitaryViewEventTroop.GetName]"
					align = nobaseline
					default_format = "#high"
				}

				expand = {}

				hbox_soldiers_and_quality_small = {
					datacontext = "[MilitaryViewEventTroop.GetComposition]"

					blockoverride "background" {
						background = {
							using = Background_Area
							margin = { 3 0 }
						}
					}
				}
			}

			expand = {}

			hbox = {
				layoutpolicy_horizontal = expanding
				margin = { 15 0 }
				margin_right = 10
				margin_bottom = 13

				vbox = {
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding

					expand = {}

					hbox = {
						name = "menatarms"
						layoutpolicy_horizontal = expanding

						text_single = {
							text = MV_MEN_AT_ARMS_LABEL
							align = nobaseline
						}

						text_single = {
							visible = "[IsDataModelEmpty(MilitaryViewEventTroop.GetRegiments)]"
							text = MV_MEN_AT_ARMS_NONE
							align = nobaseline
							default_format = "#weak"
						}

						spacer = {
							size = { 5 0 }
						}

						hbox = {
							name = "regiment_types"
							datamodel = "[MilitaryViewEventTroop.GetRegiments]"
							layoutpolicy_vertical = expanding

							item = {
								icon = {
									size = { 30 30 }
									texture = "[Regiment.GetMAAType.GetIcon]"
									tooltipwidget = regiment_container_tooltip
									using = tooltip_se
								}
							}
						}

						expand = {}
					}

					text_single = {
						visible = "[Not(MilitaryViewEventTroop.IsInheritable)]"

						layoutpolicy_horizontal = expanding
						text = "MILITARY_VIEW_EVENT_TROOPS_NOT_INHERITABLE"
					}

					text_single = {
						visible = "[MilitaryViewEventTroop.IsInheritable]"

						layoutpolicy_horizontal = expanding
						text = "MILITARY_VIEW_EVENT_TROOPS_INHERITABLE"
					}

					hbox = {
						datacontext = "[MilitaryViewEventTroop.GetAssociatedWar]"
						visible = "[War.IsValid]"

						layoutpolicy_horizontal = expanding

						text_single = {
							visible = "[MilitaryViewEventTroop.IsInheritable]"
							text = "MILITARY_VIEW_EVENT_TROOPS_ASSOCIATED_WAR"
							max_width = 450
							multiline = yes
						}

						expand = {}
					}
				}

				vbox = {
					layoutpolicy_vertical = expanding

					margin_right = 5

					expand = {}

					button_standard = {
						name = "raise"
						size = { 100 32 }
						onclick = "[OnRaiseEventTroops(MilitaryViewEventTroop.Self)]"
						visible = "[MilitaryViewEventTroop.CanBeRaised]"
						enabled = "[Not(MilitaryView.IsAutomatingArmies)]"
						tooltip = "[MilitaryView.GetCanRaiseEventTroopTooltip]"

						hbox = {
							margin = { 5 0 }

							button_army_details = {
								size = { 28 28 }
								alwaystransparent = yes
							}

							text_single = {
								layoutpolicy_horizontal = expanding
								align = center|nobaseline
								text = "MILITARY_VIEW_EVENT_TROOPS_RAISE"
								default_format = "#clickable"
							}
						}
					}
				}
			}
		}
	}

	# Why?: We are adding the ability to disable notifications to hide janky effects happening in the background
	type notifications_toasts = widget {
        name = "toast_container_widget"
        visible = "[And( Not(IsGameViewOpen('barbershop')), And( ToastMessageHandler.HasMessage, Not(SinglePlayerShowingPausedSuccession) ) )]"
        visible_at_creation = no
        allow_outside = yes
        datacontext = "[GetPlayer]"
        widgetanchor = center

        # Default Toast Animations
        state = {
            name = _show
            using = Animation_FadeIn_Standard
            bezier = { 0.7 0 0.7 1 }
        }

        state = {
            name = _hide
            using = Animation_FadeOut_Standard
            size = { 1 200}
            bezier = { 0.7 0 0.7 1 }
        }
        
        notifications_toasts_default = {
            position = "[Select_CVector2f( IsGameViewOpen('activity_locale'), '(CVector2f)-600,195', '(CVector2f)0,150' )]"
            datacontext = "[ToastMessageHandler.GetMessage]"
            # visible = "[Not( PlayerMessageItem.GetType.HasFlags )]"
            visible = "[Or(And(Not( PlayerMessageItem.GetType.HasFlags ), Not( EqualTo_CFixedPoint( GetGlobalVariable( 'disable_toast_notifications' ).GetValue, '(CFixedPoint)1' ) )  ), EqualTo_string(PlayerMessageItem.GetTitle, Localize('new_aeluran_army_arrived_title'))) ]"
        }

        notifications_toasts_contests = {
            position = { 0 165 }
            datacontext = "[ToastMessageHandler.GetMessage]"
            visible = "[PlayerMessageItem.GetType.HasFlag( 'tournament_reward' )]"
        }

        notifications_toasts_contracts = {
            position = { 0 165 }
            datacontext = "[ToastMessageHandler.GetMessage]"
            visible = "[PlayerMessageItem.GetType.HasFlag('contract_completion_reward')]"
        }
    }
}