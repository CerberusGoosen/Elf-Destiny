
elf_debug_menu = {
	desc = "elf_debug_menu_desc"
	selection_tooltip = "elf_debug_menu_tooltip"
	
	picture = {
		reference = "gfx/interface/illustrations/decisions/decision_divine_spark.dds"
	}

	decision_group_type = debug

	is_shown = {
		is_ai = no
		OR = {
			# has_global_variable = elf_cheats_on
			debug_only = yes
			has_game_rule = elf_dest_debug_menu_turned_on
		}
	}

	ai_goal = no
	ai_will_do = {
		value = 0
	}
	ai_potential = {
		always = no
	}
	ai_check_interval = 0

	effect = {
		custom_tooltip = elf_dest_debug_skip_story
		custom_tooltip = elf_dest_debug_spawn_artifacts
		
		trigger_event = { id = elf_destiny_debug_menu.001 }
	}
}


magi_troop = {
	desc = "magi_troop"
	selection_tooltip = "elf_debug_menu_tooltip"
	
	picture = {
		reference = "gfx/interface/illustrations/decisions/decision_divine_spark.dds"
	}

	decision_group_type = debug

	is_shown = {
		is_ai = no
		OR = {
			# has_global_variable = elf_cheats_on
			debug_only = yes
			has_game_rule = elf_dest_debug_menu_turned_on
		}
	}

	ai_goal = no
	ai_will_do = {
		value = 0
	}
	ai_potential = {
		always = no
	}
	ai_check_interval = 0

	effect = {

		custom_tooltip = {
			text = "TEST"
			hidden_effect = {
				manage_aeluran_reinforcements_effect = yes
			}
		}

		# random_maa_regiment = {
		# 	save_scope_as = the_army
		# }

		# set_variable = {
		# 	name = the_army
		# 	value = scope:the_army
		# }

		# on_army_monthly

		# var:aeluran_reinforcements_army = {
		# 	save_scope_as = the_army
		# }


		# create_character = {
		# 	template = orphan_gwynthorn_male
		# 	age = 15
		# 	# dynasty = none
		# 	location = root.location
		# 	faith = root.faith
		# 	culture = culture:culture_elf
		# 	save_scope_as = landless_ruler
		# }

		# # hidden_effect = {
		# # 	create_title_and_vassal_change = {
		# # 		type = conquest
		# # 		save_scope_as = title_changin
		# # 		add_claim_on_loss = yes
		# # 	}
	
		# # 	title:c_lag_dera = {
		# # 		change_title_holder = {
		# # 			holder = scope:landless_ruler
		# # 			change = scope:title_changin
		# # 		}
		# # 	}
	
		# # 	resolve_title_and_vassal_change = scope:title_changin
			
		# # }
		

		# scope:landless_ruler = {
		# 	create_landless_adventurer_title_effect = {
		# 		REASON = flag:wanderer
		# 		FLAVOR_CHAR = root
		# 	}

		# 	# add_gold = 100
		# 	# add_prestige = 500
		# }


		# # scope:landless_ruler = {
		# # 	create_dynamic_title = {
		# # 		tier = kingdom
		# # 		name = "YEE YEE"
		# # 	}
		# # 	create_title_and_vassal_change = {
		# # 		type = created
		# # 		save_scope_as = change
		# # 		add_claim_on_loss = yes
		# # 	}
		# # 	scope:new_title = {
		# # 		set_landless_title = yes
		# # 		set_color_from_title = root.capital_county
		# # 		# set_definitive_form = yes
		# # 		generate_coa = religious_title
		# # 		set_capital_county = root.capital_county
		# # 	}	
		# # 	scope:new_title = {
		# # 		change_title_holder = {
		# # 			holder = scope:landless_ruler
		# # 			change = scope:change
		# # 		}
		# # 	}
		# # 	resolve_title_and_vassal_change = scope:change
		# # }

		# set_variable = {
		# 	name = landless_ruler
		# 	value = scope:landless_ruler
		# }

		# random_ruler = {
		# 	limit = {
		# 		is_ai = yes
		# 		# is_at_war = yes
		# 	}
		# 	save_scope_as = war_ruler
		# }
		# # set_variable = {
		# # 	name = war_ruler
		# # 	value = scope:war_ruler
		# # }




		# scope:landless_ruler = {
		# 	# ai_start_best_war = {
		# 	# 	# cb = {
		# 	# 	# 	ep3_laamp_adventurer_county_invasion
		# 	# 	# }
		# 	# }

		# 	start_war = {
		# 		cb = debug_war
		# 		target = scope:war_ruler
		# 	}
		# }

		# scope:landless_ruler = {
		# 	spawn_army = {
		# 		men_at_arms = {
		# 			type = aeluran_war_magi
		# 			men = 10
		# 		}
		# 		men_at_arms = {
		# 			type = aeluran_artillery
		# 			men = 10
		# 		}
		# 		inheritable = yes
		# 		uses_supply = yes
		# 		location = root.capital_province
		# 		name = stationed_aeluran_magi
		# 		save_temporary_scope_as = aeluran_reinforcements
		# 	}
		# }

		# scope:aeluran_reinforcements = {
		# 	random_army_maa_regiment = {
		# 		root = {
		# 			set_variable = {
		# 				name = war_magi_army_regiment
		# 				value = prev
		# 			}
		# 		}
		# 	}
		# } 

		
		# scope:landless_ruler = {
		# 	every_character_war = {
		# 		end_war = white_peace
		# 	}

		# 	set_designated_heir_unsafe = root
		# }

		# set_global_variable = { name = disable_toast_notifications value = 1 }
		# set_global_variable = disable_toast_notifications

		# set_variable = {
		# 	name = aeluran_reinforcements_army
		# 	value = scope:aeluran_reinforcements
		# }


		# # # Raised troopps work
		# random_army = {
		# 	save_scope_as = aeluran_reinforcements
		# }
		
		# set_variable = {
		# 	name = aeluran_reinforcements_army
		# 	value = scope:aeluran_reinforcements
		# }

		# var:aeluran_reinforcements_army = {
		# 	random_army_maa_regiment = {
		# 		limit = {
		# 			# is_maa_type = aeluran_war_magi
		# 			# is_regular_maa_regiment = yes
		# 			# OR = {
		# 			# 	is_hired_maa_regiment = yes
		# 			# 	is_event_maa_regiment = yes
		# 			# }
		# 			# maa_current_troops_count < maa_max_troops_count # Current regiment is missing troops 
		# 		}

		# 		root = {
		# 			set_variable = {
		# 				name = aeluran_reinforcements_regiment
		# 				value = prev
		# 			}
		# 		}

		# 		# change_maa_troops_count = 10

		# 		# change_maa_regiment_size = {
		# 		# 	size = 1
		# 		# 	reinforce = yes
		# 		# }
		# 	}
		# }

		# random_maa_regiment = {
		# 	save_scope_as = regimentz


		# }
		# set_variable = {
		# 	name = aeluran_reinforcements_regiment_v2
		# 	value = scope:regimentz
		# }
		

		# var:aeluran_reinforcements_regiment = {
		# 	change_maa_troops_count = 10

		# 	change_maa_regiment_size = {
		# 		size = 1
		# 		reinforce = yes
		# 	}
		# }

		# random_army = {
		# 	random_maa_regiment = {
		# 		limit = {
		# 			# is_maa_type = aeluran_war_magi
		# 			# is_regular_maa_regiment = yes
		# 			# OR = {
		# 			# 	is_hired_maa_regiment = yes
		# 			# 	is_event_maa_regiment = yes
		# 			# }
		# 			# maa_current_troops_count < maa_max_troops_count # Current regiment is missing troops 
		# 		}

		# 		change_maa_troops_count = 10

		# 		change_maa_regiment_size = {
		# 			size = 1
		# 			reinforce = yes
		# 		}
		# 	}
		# }


		# every_army_maa_regiment = {

		# }

		# random_army_maa_regiment = {

		# }


	}
}


magi_troop2 = {
	desc = "magi_troop"
	selection_tooltip = "elf_debug_menu_tooltip"
	
	picture = {
		reference = "gfx/interface/illustrations/decisions/decision_divine_spark.dds"
	}

	decision_group_type = debug

	is_shown = {
		is_ai = no
		OR = {
			# has_global_variable = elf_cheats_on
			debug_only = yes
			has_game_rule = elf_dest_debug_menu_turned_on
		}
	}

	ai_goal = no
	ai_will_do = {
		value = 0
	}
	ai_potential = {
		always = no
	}
	ai_check_interval = 0

	effect = {
		# set_global_variable = disable_toast_notifications
		# destroy_title = var:new_title

		var:temporary_character = {
        	death = { death_reason = death_vanished }
		}

		# record_maa_regiment_as_variable = { REGIMENT_TYPE = aeluran_war_magi }
    	# record_maa_regiment_as_variable = { REGIMENT_TYPE = aeluran_artillery }
		# remove_global_variable = disable_toast_notifications
	}
}

designate_heir = {
	desc = "magi_troop"
	selection_tooltip = "elf_debug_menu_tooltip"
	
	picture = {
		reference = "gfx/interface/illustrations/decisions/decision_divine_spark.dds"
	}

	decision_group_type = debug

	is_shown = {
		is_ai = no
		OR = {
			# has_global_variable = elf_cheats_on
			debug_only = yes
			has_game_rule = elf_dest_debug_menu_turned_on
		}
	}

	ai_goal = no
	ai_will_do = {
		value = 0
	}
	ai_potential = {
		always = no
	}
	ai_check_interval = 0

	effect = {
		# set_global_variable = disable_toast_notifications
		# remove_realm_law = landless_adventurer_succession_law

		var:temporary_character = {
        	set_designated_heir_unsafe = root
		}

		# remove_global_variable = disable_toast_notifications
	}
}

# warg_prerequisites = {
# 	desc = "warg_prerequisites"
# 	selection_tooltip = "warg_prerequisites"
	
# 	picture = {
# 		reference = "gfx/interface/illustrations/decisions/decision_divine_spark.dds"
# 	}

# 	decision_group_type = debug

# 	is_shown = {
# 		is_ai = no
# 		OR = {
# 			# has_global_variable = elf_cheats_on
# 			debug_only = yes
# 			has_game_rule = elf_dest_debug_menu_turned_on
# 		}
# 	}

# 	ai_goal = no
# 	ai_will_do = {
# 		value = 0
# 	}
# 	ai_potential = {
# 		always = no
# 	}
# 	ai_check_interval = 0

# 	effect = {
# 		add_trait = lifestyle_hunter
# 		add_trait_xp = {
# 			trait = lifestyle_hunter
# 			track = falconer
# 			value = 100
# 		}

# 		add_character_modifier = {
# 			modifier = exotic_pet_wolf
# 		}

# 		culture = {
# 			add_culture_tradition = tradition_beast_tamers
# 		}
# 	}
# }

# wolf_artifacts = {
# 	desc = "wolf_artifacts_desc"
# 	selection_tooltip = "wolf_artifacts_tooltip"
	
# 	picture = {
# 		reference = "gfx/interface/illustrations/decisions/decision_divine_spark.dds"
# 	}

# 	decision_group_type = debug

# 	is_shown = {
# 		is_ai = no
# 		OR = {
# 			# has_global_variable = elf_cheats_on
# 			debug_only = yes
# 			has_game_rule = elf_dest_debug_menu_turned_on
# 		}
# 	}

# 	ai_goal = no
# 	ai_will_do = {
# 		value = 0
# 	}
# 	ai_potential = {
# 		always = no
# 	}
# 	ai_check_interval = 0

# 	effect = {
#         create_direwolf_rug_effect = { 
#             OWNER = root
#         }
# 		create_direwolf_head_effect = { 
#             OWNER = root
#         }
# 	}
# }


# head_of_faith_title = {
# 	desc = "test_aeluran_clothes"
# 	selection_tooltip = "test_aeluran_clothes"
	
# 	picture = {
# 		reference = "gfx/interface/illustrations/decisions/decision_divine_spark.dds"
# 	}

# 	decision_group_type = debug

# 	is_shown = {
# 		is_ai = no
# 		# OR = {
# 		# 	# has_global_variable = elf_cheats_on
# 		# 	debug_only = yes
# 		# 	has_game_rule = elf_dest_debug_menu_turned_on
# 		# }
# 	}

# 	ai_goal = no
# 	ai_will_do = {
# 		value = 0
# 	}
# 	ai_potential = {
# 		always = no
# 	}
# 	ai_check_interval = 0

# 	effect = {
# 		# set_aeluran_clothing_colors = yes

# 		# title:d_high_matriarch.holder = {
# 		# 	change_government = aeluran_weavers_government
# 		# }

# 		# character:elandra_thalwyn = {
# 		# 	change_government = aeluran_weavers_government
# 		# }
# 		faith:aeluran_weavers = {
# 			set_religious_head_title = title:d_high_matriarch
# 		}

# 		# title:d_high_matriarch.holder = {
# 		# 	change_government = aeluran_weavers_government
# 		# }
# 	}
# }

# aeluran_gov = {
# 	desc = "test_aeluran_clothes"
# 	selection_tooltip = "test_aeluran_clothes"
	
# 	picture = {
# 		reference = "gfx/interface/illustrations/decisions/decision_divine_spark.dds"
# 	}

# 	decision_group_type = debug

# 	is_shown = {
# 		is_ai = no
# 		# OR = {
# 		# 	# has_global_variable = elf_cheats_on
# 		# 	debug_only = yes
# 		# 	has_game_rule = elf_dest_debug_menu_turned_on
# 		# }
# 	}

# 	ai_goal = no
# 	ai_will_do = {
# 		value = 0
# 	}
# 	ai_potential = {
# 		always = no
# 	}
# 	ai_check_interval = 0

# 	effect = {
# 		# set_aeluran_clothing_colors = yes

# 		# title:d_high_matriarch.holder = {
# 		# 	change_government = aeluran_weavers_government
# 		# }

# 		# character:elandra_thalwyn = {
# 		# 	change_government = aeluran_weavers_government
# 		# # }
# 		# faith:aeluran_weavers = {
# 		# 	set_religious_head_title = title:d_high_matriarch
# 		# }

# 		title:d_high_matriarch.holder = {
# 			change_government = aeluran_weavers_government
# 		}
# 	}
# }

# debug_add_all_quest_items_decision = {
# 	picture = "gfx/interface/illustrations/decisions/decision_realm.dds"

# 	desc = "Launch TEST Event"
# 	selection_tooltip = "Does it work?"
# 	major = yes

# 	ai_goal = no
# 	ai_will_do = {
# 		value = 0
# 	}
# 	ai_potential = {
# 		always = no
# 	}
	
# 	ai_check_interval = 0

# 	effect = {
# 		trigger_event = { id = spark_artifact_events.0002 }
# 		# root.culture = {
# 		# 	add_culture_tradition = tradition_aeluran_etiquette
# 		# }
# 	}
# }


# debug_complete_initial_expedition_decision = {
# 	picture = "gfx/interface/illustrations/decisions/decision_realm.dds"

# 	desc = "Launch TEST Event"
# 	selection_tooltip = "Does it work?"
# 	major = yes

# 	ai_goal = no
# 	ai_will_do = {
# 		value = 0
# 	}
# 	ai_potential = {
# 		always = no
# 	}
	
# 	ai_check_interval = 0

# 	effect = {
# 		set_global_variable = {
# 			name = 01_sigil_of_the_realm_lord_found
# 			value = yes
# 		}
# 	}
# }

# debug_restore_portal_decision = {
# 	picture = "gfx/interface/illustrations/decisions/decision_realm.dds"

# 	desc = "Launch TEST Event"
# 	selection_tooltip = "Does it work?"
# 	major = yes

# 	ai_goal = no
# 	ai_will_do = {
# 		value = 0
# 	}
# 	ai_potential = {
# 		always = no
# 	}
	
# 	ai_check_interval = 0

# 	effect = {
# 		add_to_global_variable_list = {
# 			name = unavailable_unique_decisions
# 			target = flag:flag_grand_portal_restored
# 		}
# 		trigger_event = elf_destiny_main_story_events.002
# 	}
# }

# debug_magi_reinforcements = {
# 	picture = "gfx/interface/illustrations/decisions/decision_realm.dds"

# 	desc = "Launch TEST Event"
# 	selection_tooltip = "Does it work?"
# 	major = yes

# 	ai_goal = no
# 	ai_will_do = {
# 		value = 0
# 	}
# 	ai_potential = {
# 		always = no
# 	}
	
# 	ai_check_interval = 0

# 	effect = {
# 		trigger_event = aeluran_advisor_task.01011
# 	}
# }

# debug_invert_gender_laws = {

# 	picture = "gfx/interface/illustrations/decisions/decision_realm.dds"

# 	desc = "Swap Gender Laws of All titles"
# 	selection_tooltip = "Does it work?"
# 	major = yes

# 	ai_goal = no
# 	ai_will_do = {
# 		value = 0
# 	}
# 	ai_potential = {
# 		always = no
# 	}
	
# 	ai_check_interval = 0

# 	effect = {
# 		# Now realm law.
# 		if = {
# 			limit = { has_realm_law = male_only_law }
# 			add_realm_law = female_only_law
# 			if = {
# 				limit = {
# 					highest_held_title_tier >= tier_county
# 					is_male = yes
# 					is_ai = yes
# 					any_heir = { is_female = yes }
# 				}
# 				depose = yes
# 			}
# 		}
# 		else_if = {
# 			limit = { has_realm_law = male_preference_law }
# 			add_realm_law = female_preference_law
# 			if = {
# 				limit = {
# 					highest_held_title_tier >= tier_county
# 					is_male = yes
# 					is_ai = yes
# 					any_heir = { is_female = yes }
# 				}
# 				depose = yes
# 			}
# 		}


# 		every_held_title = {
# 			# Invert male-only.
# 			if = {
# 				limit = { has_title_law = male_only_law }
# 				debug_log = "first condition hit"

# 				remove_title_law = male_only_law
# 				add_title_law = female_only_law
# 			}
# 			# Invert female-only.
# 			else_if = {
# 				limit = { has_title_law = female_only_law }
# 				debug_log = "second condition hit"

# 				remove_title_law = female_only_law
# 				add_title_law = male_only_law
# 			}
# 			else = {
# 				debug_log = "third condition hit"
# 				add_title_law = female_only_law
# 			}
# 		}
# 	}
# }

# debug_add_spark_crystal = {
# 	picture = "gfx/interface/illustrations/decisions/decision_realm.dds"

# 	desc = "Free Spark Crystal"
# 	selection_tooltip = "Free Spark Crystal"
# 	major = yes

# 	ai_goal = no
# 	ai_will_do = {
# 		value = 0
# 	}
# 	ai_potential = {
# 		always = no
# 	}
	
# 	ai_check_interval = 0

# 	effect = {
# 		create_spark_crystal_effect = { OWNER = root }
# 	}
# }

# debug_swing_scales_of_power = {
# 	picture = "gfx/interface/illustrations/decisions/decision_realm.dds"

# 	desc = "Swing the regency scales of power"
# 	selection_tooltip = "Swing the regency scales of power"
# 	major = yes

# 	ai_goal = no
# 	ai_will_do = {
# 		value = 0
# 	}
# 	ai_potential = {
# 		always = no
# 	}
	
# 	ai_check_interval = 0

# 	effect = {
# 		trigger_event = debugging_events.001
# 	}
# }

# debug_gain_lifestyle_points = {
# 	picture = "gfx/interface/illustrations/decisions/decision_realm.dds"

# 	desc = "gain lifestyle points"
# 	selection_tooltip = "gain lifestyle points"
# 	major = yes

# 	ai_goal = no
# 	ai_will_do = {
# 		value = 0
# 	}
# 	ai_potential = {
# 		always = no
# 	}
	
# 	ai_check_interval = 0

# 	effect = {
# 		add_diplomacy_lifestyle_perk_points = 1
# 		add_martial_lifestyle_perk_points = 1
# 		add_stewardship_lifestyle_perk_points = 1
# 		add_intrigue_lifestyle_perk_points = 1
# 		add_learning_lifestyle_perk_points = 1
# 	}
# }

# increase_development = {
# 	picture = "gfx/interface/illustrations/decisions/decision_realm.dds"

# 	desc = "gain lifestyle points"
# 	selection_tooltip = "gain lifestyle points"
# 	major = yes

# 	ai_goal = no
# 	ai_will_do = {
# 		value = 0
# 	}
# 	ai_potential = {
# 		always = no
# 	}
	
# 	ai_check_interval = 0

# 	effect = {
# 		title:c_cykma.county = {
# 			change_development_level = 1
# 		}
# 	}
# }

# populate_char_list = {
# 	picture = "gfx/interface/illustrations/decisions/decision_realm.dds"

# 	desc = "gain lifestyle points"
# 	selection_tooltip = "gain lifestyle points"
# 	major = yes

# 	ai_goal = no
# 	ai_will_do = {
# 		value = 0
# 	}
# 	ai_potential = {
# 		always = no
# 	}
	
# 	ai_check_interval = 0

# 	effect = {
# 		create_searched_elf_list = yes
# 	}
# }

# ascended_tribal = {
# 	picture = {
# 		reference = "gfx/interface/illustrations/decisions/decision_realm.dds"
# 	}
# 	decision_group_type = debug

# 	desc = "gain lifestyle points"
# 	selection_tooltip = "gain lifestyle points"
# 	major = yes

# 	ai_goal = no
# 	ai_will_do = {
# 		value = 0
# 	}
# 	ai_potential = {
# 		always = no
# 	}
	
# 	ai_check_interval = 0

# 	effect = {
# 		# change_government = feudal_government
# 		root.culture = {
# 			add_culture_tradition = tradition_tribal_ascension
# 		}
# 	}
# }