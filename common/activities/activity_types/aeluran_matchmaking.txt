activity_aeluran_matchmaking = {
	is_shown = {
		OR = {
			is_ai = no
			AND = {
				has_council_position = councillor_aeluran_advisor
				is_ai = yes
				# liege = {
				# 	is_ai = no
				# 	is_betrothed = no
				# 	is_married = no
				# 	is_adult = yes
				# }
				has_character_modifier = organizing_matchmaking
			}
		}
	}

	can_start_showing_failures_only = {
		# is_available_adult = yes
	}

	is_valid = {
		scope:host = {
			is_alive = yes
			is_imprisoned = no
		}
		# # If no one shows up
		# trigger_if = {
		# 	limit = {
		# 		is_current_phase_active = yes
		# 	}
		# 	has_attending_activity_guests = yes
		# }
	}
	
	on_host_death = {
		debug_log = "Aeluran Matchmaking host died"
	}

	on_invalidated = {
		debug_log = "Aeluran Matchmaking got invalidated"
	}

	###################
	# PARAMETERS
	###################

	is_grand_activity = no
	is_single_location = yes

	province_filter = top_realm
	ai_province_filter = top_realm

	max_route_deviation_mult = 2.0

	is_location_valid = {
		custom_tooltip = {
			text = not_valid_matchmaking_location
			AND = {
				exists = barony	
				barony = scope:host.liege.capital_barony
			}
		}
	}

	province_description = {
		desc = activity_feast_province_desc
	}

	max_province_icons = 1

	province_score = {
		value = 0
		add = 888
	}

	cooldown = { years = 1 }

	ai_check_interval = 1
	
	# desc is only shown in debug AI watch window
	ai_will_do = {
		value = 1000
	}

	###################
	# GUEST HANDLING
	###################

	max_guests = 2
	allow_zero_guest_invites = yes

	guest_invite_rules = {
		rules = {

		}
		defaults = {
			1 = activity_invite_rule_liege_and_liege_family
		}
	}

	can_be_activity_guest = {
		is_adult = yes
		OR = {
			scope:host.liege = root
			is_close_family_of = scope:host.liege
		}
	}

	host_intents = {
		intents = { reduce_stress_intent }
		default = reduce_stress_intent
	}

	guest_intents = {
		intents = { reduce_stress_intent }
		default = reduce_stress_intent
	}

	guest_join_chance = {
		base = 1000

		# Scripted Modifiers
		# activity_guest_shared_ai_accept_modifier = yes 
	}

	special_guests = {
		match_recipient = {
			is_required = yes

			is_shown = { 
				# scope:special_option = flag:feast_type_generic
			}
	
			select_character = {
				if = {
					limit = {
						exists = var:matchmaking_character
					}
					var:matchmaking_character = {
						save_scope_as = character
					}
				}

				# if = {
				# 	limit = {
				# 		liege = {
				# 			is_adult = yes
				# 			is_betrothed = no
				# 			is_married = no
				# 		}
				# 	}

				# 	debug_log = "CAN I SELECT 1"

				# 	liege = {
				# 		save_scope_as = character
				# 	}
				# }
				# else_if = {
				# 	limit = {
				# 		liege.player_heir = {
				# 			# is_child_of = prev
				# 			is_adult = yes
				# 			is_betrothed = no
				# 			is_married = no
				# 		}
				# 	}

				# 	debug_log = "CAN I SELECT 2"

				# 	liege.player_heir = {
				# 		save_scope_as = character
				# 	}
				# }
			}

			can_pick = {
				NOT = { this = scope:host }
				# is_liege_or_above_of = scope:host 
			}

			on_invite = {
				## maybe we auto make ai characters join?
				
				scope:host.liege = {
					trigger_event = aeluran_matchmaking.101
				}
				# if = {
				# 	limit = {
				# 		is_ai = no
				# 	}
				# 	debug_log = "SENDING INVITE"					
				# 	scope:host.liege = {
				# 		trigger_event = aeluran_matchmaking.101
				# 	}
				# }	
			}
			
			ai_will_do = {
				value = 1000
			}
		}
	}

	travel_entourage_selection = {
		weight = {
			value = standard_travel_entourage_additions
		}
		max = 18
		invite_rule_order = 3
	}

	cost = {
		gold = 0
	}

	ui_predicted_cost = {
		gold = 0
	}

	###################
	# GRAPHICS
	###################

	map_entity = {
		trigger = {
			activity_location.culture = {
				OR = {
					has_graphical_mena_culture_group_trigger = yes
					has_graphical_steppe_culture_group_trigger = yes
					has_graphical_african_culture_group_trigger = yes
				}
			}
		}
		reference = "building_mena_feast_01_entity"
	}

	map_entity = {
		trigger = {
			activity_location.culture = {
				has_graphical_india_culture_group_trigger = yes
			}
		}
		reference = "building_indian_feast_01_entity"
	}
	
	map_entity = "building_western_feast_01_entity"

	# Travel
	background = { # Bridge
		trigger = {
			OR = {
				NOT = {
					scope:host.location = scope:activity.activity_location
				}
				AND = {
					exists = scope:activity.special_guest:honorary_guest.location
					NOT = {
						scope:activity.special_guest:honorary_guest.location ?= scope:activity.activity_location
					}
				}
				AND = {
					exists = scope:activity.special_guest:honorary_guest_regular.location
					NOT = {
						scope:activity.special_guest:honorary_guest_regular.location ?= scope:activity.activity_location
					}
				}
			}
			scope:host.location = {
				is_riverside_province = yes
				geographical_region = world_europe
				OR = {
					terrain = farmlands
					terrain = plains
					terrain = mountains
					terrain = hills
				}
			}
		}
		texture = "gfx/interface/illustrations/event_scenes/ep2_travel_bridge.dds"
		environment = "environment_travel_bridge"
		ambience = "event:/SFX/Events/Backgrounds/mountains_day"
	}
	
	background = { # Farmland, settled
		trigger = {
			OR = {
				NOT = {
					scope:host.location = scope:activity.activity_location
				}
				AND = {
					exists = scope:activity.special_guest:honorary_guest.location
					NOT = {
						scope:activity.special_guest:honorary_guest.location ?= scope:activity.activity_location
					}
				}
				AND = {
					exists = scope:activity.special_guest:honorary_guest_regular.location
					NOT = {
						scope:activity.special_guest:honorary_guest_regular.location ?= scope:activity.activity_location
					}
				}
			}
			scope:host.location = {
				terrain = farmlands
				exists = province_owner
			}
		}
		texture = "gfx/interface/illustrations/event_scenes/ep2_travel_farm.dds"
		environment = "environment_travel_farmlands"
		ambience = "event:/SFX/Events/Backgrounds/fields_farms_day"
	}
	background = { # Farmland, unsettled
		trigger = {
			OR = {
				NOT = {
					scope:host.location = scope:activity.activity_location
				}
				AND = {
					exists = scope:activity.special_guest:honorary_guest.location
					NOT = {
						scope:activity.special_guest:honorary_guest.location ?= scope:activity.activity_location
					}
				}
				AND = {
					exists = scope:activity.special_guest:honorary_guest_regular.location
					NOT = {
						scope:activity.special_guest:honorary_guest_regular.location ?= scope:activity.activity_location
					}
				}
			}
			scope:host.location = {
				terrain = farmlands
				NOT = { exists = province_owner }
			}
		}
		texture = "gfx/interface/illustrations/event_scenes/farms.dds"
		environment = "environment_event_farms"
		ambience = "event:/SFX/Events/Backgrounds/fields_farms_day"
	}

	background = { #Desert, settled
		trigger = {
			OR = {
				NOT = {
					scope:host.location = scope:activity.activity_location
				}
				AND = {
					exists = scope:activity.special_guest:honorary_guest.location
					NOT = {
						scope:activity.special_guest:honorary_guest.location ?= scope:activity.activity_location
					}
				}
				AND = {
					exists = scope:activity.special_guest:honorary_guest_regular.location
					NOT = {
						scope:activity.special_guest:honorary_guest_regular.location ?= scope:activity.activity_location
					}
				}
			}
			scope:host.location = {
				graphical_wilderness_desert_trigger = yes
				exists = province_owner
			}
		}
		texture = "gfx/interface/illustrations/event_scenes/ep2_travel_desert.dds"
		environment = "environment_travel_desert"
		ambience = "event:/SFX/Events/Backgrounds/desert_day"
	}
	background = { #Desert, unsettled
		trigger = {
			OR = {
				NOT = {
					scope:host.location = scope:activity.activity_location
				}
				AND = {
					exists = scope:activity.special_guest:honorary_guest.location
					NOT = {
						scope:activity.special_guest:honorary_guest.location ?= scope:activity.activity_location
					}
				}
				AND = {
					exists = scope:activity.special_guest:honorary_guest_regular.location
					NOT = {
						scope:activity.special_guest:honorary_guest_regular.location ?= scope:activity.activity_location
					}
				}
			}
			scope:host.location = {
				graphical_wilderness_desert_trigger = yes
				NOT = { exists = province_owner }
			}
		}
		texture = "gfx/interface/illustrations/event_scenes/desert.dds"
		environment = "environment_event_bp1_desert"
		ambience = "event:/SFX/Events/Backgrounds/desert_day"
	}

	background = { #forest snowy
		trigger = {
			OR = {
				NOT = {
					scope:host.location = scope:activity.activity_location
				}
				AND = {
					exists = scope:activity.special_guest:honorary_guest.location
					NOT = {
						scope:activity.special_guest:honorary_guest.location ?= scope:activity.activity_location
					}
				}
				AND = {
					exists = scope:activity.special_guest:honorary_guest_regular.location
					NOT = {
						scope:activity.special_guest:honorary_guest_regular.location ?= scope:activity.activity_location
					}
				}
			}
			scope:host.location ?= { hunt_snowy_forest_trigger = yes }
		}
		texture = "gfx/interface/illustrations/event_scenes/ep2_hunt_snowy_forest.dds"
		environment = "environment_hunt_snowy_forest"
		ambience = "event:/SFX/Events/Backgrounds/mountains_day"
	}

	background = { #forest_pine
		trigger = {
			OR = {
				NOT = {
					scope:host.location = scope:activity.activity_location
				}
				AND = {
					exists = scope:activity.special_guest:honorary_guest.location
					NOT = {
						scope:activity.special_guest:honorary_guest.location ?= scope:activity.activity_location
					}
				}
				AND = {
					exists = scope:activity.special_guest:honorary_guest_regular.location
					NOT = {
						scope:activity.special_guest:honorary_guest_regular.location ?= scope:activity.activity_location
					}
				}
			}
			scope:host.location = {
				graphical_wilderness_forest_pine_trigger = yes
			}
		}
		texture = "gfx/interface/illustrations/event_scenes/forest_pine.dds"
		environment = "environment_event_forest_pine"
		ambience = "event:/SFX/Events/Backgrounds/coniferous_forest_day"
	}

	background = { #forest
		trigger = {
			OR = {
				NOT = {
					scope:host.location = scope:activity.activity_location
				}
				AND = {
					exists = scope:activity.special_guest:honorary_guest.location
					NOT = {
						scope:activity.special_guest:honorary_guest.location ?= scope:activity.activity_location
					}
				}
				AND = {
					exists = scope:activity.special_guest:honorary_guest_regular.location
					NOT = {
						scope:activity.special_guest:honorary_guest_regular.location ?= scope:activity.activity_location
					}
				}
			}
			scope:host.location = {
				graphical_wilderness_forest_trigger = yes
			}
		}
		texture = "gfx/interface/illustrations/event_scenes/forest.dds"
		environment = "environment_event_forest"
		ambience = "event:/SFX/Events/Backgrounds/deciduous_forest_day"
	}

	background = { #mountains, settled
		trigger = {
			OR = {
				NOT = {
					scope:host.location = scope:activity.activity_location
				}
				AND = {
					exists = scope:activity.special_guest:honorary_guest.location
					NOT = {
						scope:activity.special_guest:honorary_guest.location ?= scope:activity.activity_location
					}
				}
				AND = {
					exists = scope:activity.special_guest:honorary_guest_regular.location
					NOT = {
						scope:activity.special_guest:honorary_guest_regular.location ?= scope:activity.activity_location
					}
				}
			}
			scope:host.location = {
				graphical_wilderness_mountains_trigger = yes
				exists = province_owner
			}
		}
		texture = "gfx/interface/illustrations/event_scenes/ep2_travel_mountains.dds"
		environment = "environment_travel_mountain_settlement"
		ambience = "event:/SFX/Events/Backgrounds/mountains_day"
	}
	background = { #mountains, unsettled
		trigger = {
			OR = {
				NOT = {
					scope:host.location = scope:activity.activity_location
				}
				AND = {
					exists = scope:activity.special_guest:honorary_guest.location
					NOT = {
						scope:activity.special_guest:honorary_guest.location ?= scope:activity.activity_location
					}
				}
				AND = {
					exists = scope:activity.special_guest:honorary_guest_regular.location
					NOT = {
						scope:activity.special_guest:honorary_guest_regular.location ?= scope:activity.activity_location
					}
				}
			}
			scope:host.location = {
				graphical_wilderness_mountains_trigger = yes
				NOT = { exists = province_owner }
			}
		}
		texture = "gfx/interface/illustrations/event_scenes/mountains.dds"
		environment = "environment_event_mountains"
		ambience = "event:/SFX/Events/Backgrounds/mountains_day"
	}

	background = { #steppe, settled
		trigger = {
			OR = {
				NOT = {
					scope:host.location = scope:activity.activity_location
				}
				AND = {
					exists = scope:activity.special_guest:honorary_guest.location
					NOT = {
						scope:activity.special_guest:honorary_guest.location ?= scope:activity.activity_location
					}
				}
				AND = {
					exists = scope:activity.special_guest:honorary_guest_regular.location
					NOT = {
						scope:activity.special_guest:honorary_guest_regular.location ?= scope:activity.activity_location
					}
				}
			}
			scope:host.location = {
				graphical_wilderness_steppe_trigger = yes
				exists = province_owner
			}
		}
		texture = "gfx/interface/illustrations/event_scenes/ep2_travel_steppe.dds"
		environment = "environment_travel_steppe_settlement"
		ambience = "event:/SFX/Events/Backgrounds/steppe_day"
	}
	background = { #steppe, unsettled
		trigger = {
			OR = {
				NOT = {
					scope:host.location = scope:activity.activity_location
				}
				AND = {
					exists = scope:activity.special_guest:honorary_guest.location
					NOT = {
						scope:activity.special_guest:honorary_guest.location ?= scope:activity.activity_location
					}
				}
				AND = {
					exists = scope:activity.special_guest:honorary_guest_regular.location
					NOT = {
						scope:activity.special_guest:honorary_guest_regular.location ?= scope:activity.activity_location
					}
				}
			}
			scope:host.location = {
				graphical_wilderness_steppe_trigger = yes
				NOT = { exists = province_owner }
			}
		}
		texture = "gfx/interface/illustrations/event_scenes/steppe.dds"
		environment = "environment_event_steppe"
		ambience = "event:/SFX/Events/Backgrounds/steppe_day"
	}

	background = { #drylands (formerly desert)
		trigger = {
			OR = {
				NOT = {
					scope:host.location = scope:activity.activity_location
				}
				AND = {
					exists = scope:activity.special_guest:honorary_guest.location
					NOT = {
						scope:activity.special_guest:honorary_guest.location ?= scope:activity.activity_location
					}
				}
				AND = {
					exists = scope:activity.special_guest:honorary_guest_regular.location
					NOT = {
						scope:activity.special_guest:honorary_guest_regular.location ?= scope:activity.activity_location
					}
				}
			}
			scope:host.location = {
				graphical_drylands_trigger = yes
			}
		}
		texture = "gfx/interface/illustrations/event_scenes/drylands.dds"
		environment = "environment_event_desert"
		ambience = "event:/SFX/Events/Backgrounds/desert_day"
	}

	background = { #wetlands
		trigger = {
			OR = {
				NOT = {
					scope:host.location = scope:activity.activity_location
				}
				AND = {
					exists = scope:activity.special_guest:honorary_guest.location
					NOT = {
						scope:activity.special_guest:honorary_guest.location ?= scope:activity.activity_location
					}
				}
				AND = {
					exists = scope:activity.special_guest:honorary_guest_regular.location
					NOT = {
						scope:activity.special_guest:honorary_guest_regular.location ?= scope:activity.activity_location
					}
				}
			}
			scope:host.location = {
				graphical_wilderness_wetlands_trigger = yes
			}
		}
		texture = "gfx/interface/illustrations/event_scenes/bp1_wetlands.dds"
		environment = "environment_event_bp1_wetlands" 
		ambience = "event:/SFX/Events/Backgrounds/deciduous_forest_day"
	}

	background = { #jungle
		trigger = {
			OR = {
				NOT = {
					scope:host.location = scope:activity.activity_location
				}
				AND = {
					exists = scope:activity.special_guest:honorary_guest.location
					NOT = {
						scope:activity.special_guest:honorary_guest.location ?= scope:activity.activity_location
					}
				}
				AND = {
					exists = scope:activity.special_guest:honorary_guest_regular.location
					NOT = {
						scope:activity.special_guest:honorary_guest_regular.location ?= scope:activity.activity_location
					}
				}
			}
			scope:host.location = {
				graphical_wilderness_jungle_trigger = yes
			}
		}
		texture = "gfx/interface/illustrations/event_scenes/bp1_jungle.dds"
		environment = "environment_event_bp1_jungle"
		ambience = "event:/SFX/Events/Backgrounds/deciduous_forest_day"
	}

	background = { #plains, settled
		trigger = {
			OR = {
				NOT = {
					scope:host.location = scope:activity.activity_location
				}
				AND = {
					exists = scope:activity.special_guest:honorary_guest.location
					NOT = {
						scope:activity.special_guest:honorary_guest.location ?= scope:activity.activity_location
					}
				}
				AND = {
					exists = scope:activity.special_guest:honorary_guest_regular.location
					NOT = {
						scope:activity.special_guest:honorary_guest_regular.location ?= scope:activity.activity_location
					}
				}
			}
			scope:host.location = {
				graphical_plains_trigger = yes
				exists = province_owner
			}
		}
		texture = "gfx/interface/illustrations/event_scenes/ep2_travel_hills.dds"
		environment = "environment_travel_hills_settlement"
		ambience = "event:/SFX/Events/Backgrounds/fields_farms_day"
	}
	background = { #plains, unsettled
		trigger = {
			OR = {
				NOT = {
					scope:host.location = scope:activity.activity_location
				}
				AND = {
					exists = scope:activity.special_guest:honorary_guest.location
					NOT = {
						scope:activity.special_guest:honorary_guest.location ?= scope:activity.activity_location
					}
				}
				AND = {
					exists = scope:activity.special_guest:honorary_guest_regular.location
					NOT = {
						scope:activity.special_guest:honorary_guest_regular.location ?= scope:activity.activity_location
					}
				}
			}
			scope:host.location = {
				graphical_plains_trigger = yes
				NOT = { exists = province_owner }
			}
		}
		texture = "gfx/interface/illustrations/event_scenes/bp1_plains.dds"
		environment = "environment_event_bp1_plains"
		ambience = "event:/SFX/Events/Backgrounds/fields_farms_day"
	}

	background = { #hills, settled
		trigger = {
			OR = {
				NOT = {
					scope:host.location = scope:activity.activity_location
				}
				AND = {
					exists = scope:activity.special_guest:honorary_guest.location
					NOT = {
						scope:activity.special_guest:honorary_guest.location ?= scope:activity.activity_location
					}
				}
				AND = {
					exists = scope:activity.special_guest:honorary_guest_regular.location
					NOT = {
						scope:activity.special_guest:honorary_guest_regular.location ?= scope:activity.activity_location
					}
				}
			}
			scope:host.location = {
				graphical_hills_trigger = yes
				exists = province_owner
			}
		}
		texture = "gfx/interface/illustrations/event_scenes/ep2_travel_hills.dds"
		environment = "environment_travel_hills_settlement"
		ambience = "event:/SFX/Events/Backgrounds/fields_farms_day"
	}
	background = { #hills, unsettled
		trigger = {
			OR = {
				NOT = {
					scope:host.location = scope:activity.activity_location
				}
				AND = {
					exists = scope:activity.special_guest:honorary_guest.location
					NOT = {
						scope:activity.special_guest:honorary_guest.location ?= scope:activity.activity_location
					}
				}
				AND = {
					exists = scope:activity.special_guest:honorary_guest_regular.location
					NOT = {
						scope:activity.special_guest:honorary_guest_regular.location ?= scope:activity.activity_location
					}
				}
			}
			scope:host.location = {
				graphical_hills_trigger = yes
				NOT = { exists = province_owner }
			}
		}
		texture = "gfx/interface/illustrations/event_scenes/bp1_hills.dds"
		environment = "environment_event_bp1_hills"
		ambience = "event:/SFX/Events/Backgrounds/fields_farms_day"
	}

	background = { #sea
		trigger = {
			OR = {
				NOT = {
					scope:host.location = scope:activity.activity_location
				}
				AND = {
					exists = scope:activity.special_guest:honorary_guest.location
					NOT = {
						scope:activity.special_guest:honorary_guest.location ?= scope:activity.activity_location
					}
				}
				AND = {
					exists = scope:activity.special_guest:honorary_guest_regular.location
					NOT = {
						scope:activity.special_guest:honorary_guest_regular.location ?= scope:activity.activity_location
					}
				}
			}
			scope:host.location = {
				is_sea_province = yes
			}
		}
		texture = "gfx/interface/illustrations/event_scenes/fp1_ocean.dds"
		environment = "environment_event_fp1_ocean"
		ambience = "event:/DLC/FP1/SFX/Events/event_ocean_longship"
	}
	# End Travel

	background = {	# FP1
		trigger = {
			activity_location.culture = { has_building_gfx = norse_building_gfx }
		}
		texture = "gfx/interface/illustrations/event_scenes/fp1_viking_feast.dds"
		environment = "environment_event_fp1_viking_feast"
		ambience = "event:/DLC/FP1/SFX/Events/event_viking_feast"
	}
	background = {
		trigger = {
			activity_location.culture = { has_building_gfx = indian_building_gfx }
		}
		texture = "gfx/interface/illustrations/event_scenes/ep2_feast_indian.dds"
		environment = "environment_indian_feast"
		ambience = "event:/SFX/Events/Backgrounds/feasthall"
	}
	background = {
		trigger = {
			OR = {
				activity_location.culture = { has_building_gfx = arabic_group_building_gfx }
				activity_location.culture = { has_building_gfx = berber_group_building_gfx }
				activity_location.culture = { has_building_gfx = iberian_building_gfx }
			}
		}
		texture = "gfx/interface/illustrations/event_scenes/ep2_feast_mena.dds"
		environment = "environment_mena_feast"
		ambience = "event:/SFX/Events/Backgrounds/feasthall"
	}
	background = {
		trigger = {
			activity_location.culture = { has_building_gfx = steppe_building_gfx }
		}
		texture = "gfx/interface/illustrations/event_scenes/ep2_feast_steppe.dds"
		environment = "environment_steppe_feast"
		ambience = "event:/SFX/Events/Backgrounds/feasthall"
	}
	background = {
		trigger = {
			activity_location.culture = { has_building_gfx = african_building_gfx }
		}
		texture = "gfx/interface/illustrations/event_scenes/ep2_feast_sub_saharan.dds"
		environment = "environment_sub-saharan_feast"
		ambience = "event:/SFX/Events/Backgrounds/feasthall"
	}
	background = {
		trigger = {
			OR = {
				# scope:activity = {
				# 	has_activity_option = {
				# 		category = special_type
				# 		option = feast_type_generic
				# 	}
				# }
				scope:activity.special_guest:honorary_guest ?= { is_alive = yes }
			}
		}
		texture = "gfx/interface/illustrations/event_scenes/feast.dds"
		environment = "environment_event_feast"
		ambience = "event:/SFX/Events/Backgrounds/feasthall"
		music = "grandfeast_cue"
	}

	window_characters = {
		
		guest = {
			camera = camera_body_right

			effect = {
				if = {
					limit = {
						scope:host.location = scope:activity.activity_location
						OR = {
							NOT = { exists = scope:activity.special_guest:honorary_guest }
							scope:activity.special_guest:honorary_guest.location ?= scope:activity.activity_location
						}
						OR = {
							NOT = { exists = scope:activity.special_guest:honorary_guest_regular }
							scope:activity.special_guest:honorary_guest_regular.location ?= scope:activity.activity_location
						}
						exists = scope:player
						scope:player = {
							location = scope:activity.activity_location
							NOR = {
								this = scope:host
								scope:activity.special_guest:honorary_guest ?= this
								scope:activity.special_guest:honorary_guest_regular ?= this
							}
						}
					}
					scope:player ?= { add_to_list = characters }
				}
				else_if = {
					limit = {
						scope:host.location = scope:activity.activity_location
						OR = {
							NOT = { exists = scope:activity.special_guest:honorary_guest }
							scope:activity.special_guest:honorary_guest.location ?= scope:activity.activity_location
						}
						OR = {
							NOT = { exists = scope:activity.special_guest:honorary_guest_regular }
							scope:activity.special_guest:honorary_guest_regular.location ?= scope:activity.activity_location
						}
						exists = scope:host.intent_target
						any_attending_character = {
							location = scope:activity.activity_location
							NOR = {
								this = scope:host
								scope:activity.special_guest:honorary_guest ?= this
								scope:activity.special_guest:honorary_guest_regular ?= this
							}
							this = scope:host.intent_target
						}
					}
					every_attending_character = {
						limit = {
							location = scope:activity.activity_location
							NOR = {
								this = scope:host
								scope:activity.special_guest:honorary_guest ?= this
								scope:activity.special_guest:honorary_guest_regular ?= this
							}
							this = scope:host.intent_target
						}
						add_to_list = characters
					}
				}
				else_if = {
					limit = {
						scope:host.location = scope:activity.activity_location
						OR = {
							NOT = { exists = scope:activity.special_guest:honorary_guest }
							scope:activity.special_guest:honorary_guest.location ?= scope:activity.activity_location
						}
						OR = {
							NOT = { exists = scope:activity.special_guest:honorary_guest_regular }
							scope:activity.special_guest:honorary_guest_regular.location ?= scope:activity.activity_location
						}
						any_attending_character = {
							location = scope:activity.activity_location
							NOR = {
								this = scope:host
								scope:activity.special_guest:honorary_guest ?= this
								scope:activity.special_guest:honorary_guest_regular ?= this
							}
							OR = {
								has_relation_lover = scope:host
								has_relation_friend = scope:host
							}
						}
					}
					every_attending_character = {
						limit = {
							location = scope:activity.activity_location
							NOR = {
								this = scope:host
								scope:activity.special_guest:honorary_guest ?= this
								scope:activity.special_guest:honorary_guest_regular ?= this
							}
							OR = {
								has_relation_lover = scope:host
								has_relation_friend = scope:host
							}
						}
						add_to_list = characters
					}
				}
				else_if = {
					limit = {
						scope:host.location = scope:activity.activity_location
						OR = {
							NOT = { exists = scope:activity.special_guest:honorary_guest }
							scope:activity.special_guest:honorary_guest.location ?= scope:activity.activity_location
						}
						OR = {
							NOT = { exists = scope:activity.special_guest:honorary_guest_regular }
							scope:activity.special_guest:honorary_guest_regular.location ?= scope:activity.activity_location
						}
						any_attending_character = {
							location = scope:activity.activity_location
							NOR = {
								this = scope:host
								scope:activity.special_guest:honorary_guest ?= this
								scope:activity.special_guest:honorary_guest_regular ?= this
							}
							is_consort_of = scope:host
						}
					}
					every_attending_character = {
						limit = {
							location = scope:activity.activity_location
							NOR = {
								this = scope:host
								scope:activity.special_guest:honorary_guest ?= this
								scope:activity.special_guest:honorary_guest_regular ?= this
							}
							is_consort_of = scope:host
						}
						add_to_list = characters
					}
				}
				else_if = {
					limit = {
						scope:host.location = scope:activity.activity_location
						OR = {
							NOT = { exists = scope:activity.special_guest:honorary_guest }
							scope:activity.special_guest:honorary_guest.location ?= scope:activity.activity_location
						}
						OR = {
							NOT = { exists = scope:activity.special_guest:honorary_guest_regular }
							scope:activity.special_guest:honorary_guest_regular.location ?= scope:activity.activity_location
						}
						any_attending_character = {
							location = scope:activity.activity_location
							NOR = {
								this = scope:host
								scope:activity.special_guest:honorary_guest ?= this
								scope:activity.special_guest:honorary_guest_regular ?= this
							}
							is_councillor_of = scope:host
						}
					}
					every_attending_character = {
						limit = {
							location = scope:activity.activity_location
							NOR = {
								this = scope:host
								scope:activity.special_guest:honorary_guest ?= this
								scope:activity.special_guest:honorary_guest_regular ?= this
							}
							is_councillor_of = scope:host
						}
						add_to_list = characters
					}
				}
				else_if = {
					limit = {
						scope:host.location = scope:activity.activity_location
						OR = {
							NOT = { exists = scope:activity.special_guest:honorary_guest }
							scope:activity.special_guest:honorary_guest.location ?= scope:activity.activity_location
						}
						OR = {
							NOT = { exists = scope:activity.special_guest:honorary_guest_regular }
							scope:activity.special_guest:honorary_guest_regular.location ?= scope:activity.activity_location
						}
						any_attending_character = {
							location = scope:activity.activity_location
							NOR = {
								this = scope:host
								scope:activity.special_guest:honorary_guest ?= this
								scope:activity.special_guest:honorary_guest_regular ?= this
							}
							highest_held_title_tier >= tier_duchy
						}
					}
					every_attending_character = {
						limit = {
							location = scope:activity.activity_location
							NOR = {
								this = scope:host
								scope:activity.special_guest:honorary_guest ?= this
								scope:activity.special_guest:honorary_guest_regular ?= this
							}
							highest_held_title_tier >= tier_duchy
						}
						add_to_list = characters
					}
				}
				else_if = {
					limit = {
						scope:host.location = scope:activity.activity_location
						OR = {
							NOT = { exists = scope:activity.special_guest:honorary_guest }
							scope:activity.special_guest:honorary_guest.location ?= scope:activity.activity_location
						}
						OR = {
							NOT = { exists = scope:activity.special_guest:honorary_guest_regular }
							scope:activity.special_guest:honorary_guest_regular.location ?= scope:activity.activity_location
						}
						any_attending_character = {
							location = scope:activity.activity_location
							NOR = {
								this = scope:host
								scope:activity.special_guest:honorary_guest ?= this
								scope:activity.special_guest:honorary_guest_regular ?= this
							}
							highest_held_title_tier >= tier_county
						}
					}
					every_attending_character = {
						limit = {
							location = scope:activity.activity_location
							NOR = {
								this = scope:host
								scope:activity.special_guest:honorary_guest ?= this
								scope:activity.special_guest:honorary_guest_regular ?= this
							}
							highest_held_title_tier >= tier_county
						}
						add_to_list = characters
					}
				}
				else_if = {
					limit = {
						scope:host.location = scope:activity.activity_location
						OR = {
							NOT = { exists = scope:activity.special_guest:honorary_guest }
							scope:activity.special_guest:honorary_guest.location ?= scope:activity.activity_location
						}
						OR = {
							NOT = { exists = scope:activity.special_guest:honorary_guest_regular }
							scope:activity.special_guest:honorary_guest_regular.location ?= scope:activity.activity_location
						}
						any_attending_character = {
							location = scope:activity.activity_location
							NOR = {
								this = scope:host
								scope:activity.special_guest:honorary_guest ?= this
								scope:activity.special_guest:honorary_guest_regular ?= this
							}
							OR = {
								is_parent_of = scope:host
								is_close_or_extended_family_of = scope:host
							}
						}
					}
					every_attending_character = {
						limit = {
							location = scope:activity.activity_location
							NOR = {
								this = scope:host
								scope:activity.special_guest:honorary_guest ?= this
								scope:activity.special_guest:honorary_guest_regular ?= this
							}
							OR = {
								is_parent_of = scope:host
								is_close_or_extended_family_of = scope:host
							}
						}
						add_to_list = characters
					}
				}
				else_if = {
					limit = {
						scope:host.location = scope:activity.activity_location
						OR = {
							NOT = { exists = scope:activity.special_guest:honorary_guest }
							scope:activity.special_guest:honorary_guest.location ?= scope:activity.activity_location
						}
						OR = {
							NOT = { exists = scope:activity.special_guest:honorary_guest_regular }
							scope:activity.special_guest:honorary_guest_regular.location ?= scope:activity.activity_location
						}
					}
					every_attending_character = {
						limit = {
							location = scope:activity.activity_location
							NOR = {
								this = scope:host
								scope:activity.special_guest:honorary_guest ?= this
								scope:activity.special_guest:honorary_guest_regular ?= this
							}
						}
						add_to_list = characters
					}
				}
			}

			scripted_animation = {
				triggered_animation = {
					trigger = {
						exists = scope:host.intent_target
						scope:host = {
							has_activity_intent = woo_attendee_intent
						}
						scope:character = scope:host.intent_target
					}
					animation = { love flirtation }
				}
				triggered_animation = {
					trigger = {
						scope:character = { has_trait = shy }
					}
					animation = { sadness worry }
				}
				#Fallback
				animation = toast
			}
		}
		
		host = {
			camera = camera_body
			
			effect = {
				if = {
					limit = {
						scope:host.location = scope:activity.activity_location
					}
					scope:host = {
						add_to_list = characters
					}
				}
			}

			scripted_animation = {
				triggered_animation = {
					trigger = {
						OR = {
							AND = {
								exists = scope:activity.special_guest:honorary_guest.location
								NOT = {
									scope:activity.special_guest:honorary_guest.location ?= scope:activity.activity_location
								}
							}
							AND = {
								exists = scope:activity.special_guest:honorary_guest_regular.location
								NOT = {
									scope:activity.special_guest:honorary_guest_regular.location ?= scope:activity.activity_location
								}
							}
						}
					}
					animation = { boredom }
				}
				triggered_animation = {
					trigger = {
						exists = scope:host.intent_target
						scope:host = {
							is_male = yes
							has_activity_intent = befriend_attendee_intent
						}
						scope:host.intent_target.location = scope:activity.activity_location
					}
					animation = { personality_forgiving personality_compassionate }
				}
				triggered_animation = {
					trigger = {
						exists = scope:host.intent_target
						scope:host = {
							is_male = yes
							has_activity_intent = woo_attendee_intent
						}
						scope:host.intent_target.location = scope:activity.activity_location
					}
					animation = { wedding_groom_right }
				}
				triggered_animation = {
					trigger = {
						exists = scope:host.intent_target
						scope:host = {
							is_female = yes
							has_activity_intent = woo_attendee_intent
						}
						scope:host.intent_target.location = scope:activity.activity_location
					}
					animation = { reception_bride_right }
				}
				triggered_animation = {
					trigger = {
						always = yes
					}
					animation = { toast_goblet }
				}
			}
		}
		
		travel_host = {
			camera = camera_body
			
			effect = {
				if = {
					limit = {
						NOT = {
							scope:host.location = scope:activity.activity_location
						}
					}
					scope:host = {
						add_to_list = characters
					}
				}
			}

			scripted_animation = {
				triggered_animation = {
					trigger = {
						scope:character.location = { is_sea_province = yes }
					}
					animation = { idle }
				}
				triggered_animation = {
					trigger = { scope:character = { has_trait = impatient } }
					animation = { jockey_gallop }
				}
				animation = jockey_walk
			}
		}

		honorary_guest_regular_traveling = {
			camera = camera_body
			
			effect = {
				if = {
					limit = {
						scope:activity.special_guest:honorary_guest_regular.involved_activity ?= scope:activity
						NOT = {
							scope:activity.special_guest:honorary_guest_regular.location ?= scope:activity.activity_location
						}
					}
					special_guest:honorary_guest_regular ?= {
						add_to_list = characters
					}
				}
			}

			scripted_animation = {
				triggered_animation = {
					trigger = {
						scope:character.location = { is_sea_province = yes }
					}
					animation = { idle }
				}
				triggered_animation = {
					trigger = { scope:character = { has_trait = impatient } }
					animation = { jockey_gallop }
				}
				animation = jockey_walk
			}
		}

		honorary_guest_regular = {
			camera = camera_body
			
			effect = {
				if = {
					limit = {
						scope:host.location = scope:activity.activity_location
						scope:activity.special_guest:honorary_guest_regular.location ?= scope:activity.activity_location
					}
					special_guest:honorary_guest_regular ?= {
						add_to_list = characters
					}
				}
			}

			scripted_animation = {
				triggered_animation = {
					trigger = {
						always = yes
					}
					animation = { ecstasy wedding_priest chaplain personality_honorable personality_bold }
				}
			}
		}
		
		guest = {
			camera = camera_body
			
			effect = {
				if = {
					limit = {
						scope:host.location = scope:activity.activity_location
						OR = {
							NOT = { exists = scope:activity.special_guest:honorary_guest }
							scope:activity.special_guest:honorary_guest.location ?= scope:activity.activity_location
						}
						OR = {
							NOT = { exists = scope:activity.special_guest:honorary_guest_regular }
							scope:activity.special_guest:honorary_guest_regular.location ?= scope:activity.activity_location
						}
						any_attending_character = {
							count >= 2
							location = scope:activity.activity_location
							NOR = {
								this = scope:host
								scope:activity.special_guest:honorary_guest ?= this
								scope:activity.special_guest:honorary_guest_regular ?= this
							}
							is_councillor_of = scope:host
						}
					}
					every_attending_character = {
						limit = {
							location = scope:activity.activity_location
							NOR = {
								this = scope:host
								scope:activity.special_guest:honorary_guest ?= this
								scope:activity.special_guest:honorary_guest_regular ?= this
							}
							is_councillor_of = scope:host
						}
						add_to_list = characters
					}
				}
				else_if = {
					limit = {
						scope:host.location = scope:activity.activity_location
						OR = {
							NOT = { exists = scope:activity.special_guest:honorary_guest }
							scope:activity.special_guest:honorary_guest.location ?= scope:activity.activity_location
						}
						OR = {
							NOT = { exists = scope:activity.special_guest:honorary_guest_regular }
							scope:activity.special_guest:honorary_guest_regular.location ?= scope:activity.activity_location
						}
						any_attending_character = {
							count >= 2
							location = scope:activity.activity_location
							NOR = {
								this = scope:host
								scope:activity.special_guest:honorary_guest ?= this
								scope:activity.special_guest:honorary_guest_regular ?= this
							}
							highest_held_title_tier >= tier_duchy
						}
					}
					every_attending_character = {
						limit = {
							location = scope:activity.activity_location
							NOR = {
								this = scope:host
								scope:activity.special_guest:honorary_guest ?= this
								scope:activity.special_guest:honorary_guest_regular ?= this
							}
							highest_held_title_tier >= tier_duchy
						}
						add_to_list = characters
					}
				}
				else_if = {
					limit = {
						scope:host.location = scope:activity.activity_location
						OR = {
							NOT = { exists = scope:activity.special_guest:honorary_guest }
							scope:activity.special_guest:honorary_guest.location ?= scope:activity.activity_location
						}
						OR = {
							NOT = { exists = scope:activity.special_guest:honorary_guest_regular }
							scope:activity.special_guest:honorary_guest_regular.location ?= scope:activity.activity_location
						}
						any_attending_character = {
							count >= 2
							location = scope:activity.activity_location
							NOR = {
								this = scope:host
								scope:activity.special_guest:honorary_guest ?= this
								scope:activity.special_guest:honorary_guest_regular ?= this
							}
							highest_held_title_tier >= tier_county
						}
					}
					every_attending_character = {
						limit = {
							location = scope:activity.activity_location
							NOR = {
								this = scope:host
								scope:activity.special_guest:honorary_guest ?= this
								scope:activity.special_guest:honorary_guest_regular ?= this
							}
							highest_held_title_tier >= tier_county
						}
						add_to_list = characters
					}
				}
				else_if = {
					limit = {
						scope:host.location = scope:activity.activity_location
						OR = {
							NOT = { exists = scope:activity.special_guest:honorary_guest }
							scope:activity.special_guest:honorary_guest.location ?= scope:activity.activity_location
						}
						OR = {
							NOT = { exists = scope:activity.special_guest:honorary_guest_regular }
							scope:activity.special_guest:honorary_guest_regular.location ?= scope:activity.activity_location
						}
						any_attending_character = {
							count >= 2
							location = scope:activity.activity_location
							NOR = {
								this = scope:host
								scope:activity.special_guest:honorary_guest ?= this
								scope:activity.special_guest:honorary_guest_regular ?= this
							}
							OR = {
								is_parent_of = scope:host
								is_close_or_extended_family_of = scope:host
							}
						}
					}
					every_attending_character = {
						limit = {
							location = scope:activity.activity_location
							NOR = {
								this = scope:host
								scope:activity.special_guest:honorary_guest ?= this
								scope:activity.special_guest:honorary_guest_regular ?= this
							}
							OR = {
								is_parent_of = scope:host
								is_close_or_extended_family_of = scope:host
							}
						}
						add_to_list = characters
					}
				}
				else_if = {
					limit = {
						scope:host.location = scope:activity.activity_location
						OR = {
							NOT = { exists = scope:activity.special_guest:honorary_guest }
							scope:activity.special_guest:honorary_guest.location ?= scope:activity.activity_location
						}
						OR = {
							NOT = { exists = scope:activity.special_guest:honorary_guest_regular }
							scope:activity.special_guest:honorary_guest_regular.location ?= scope:activity.activity_location
						}
					}
					every_attending_character = {
						limit = {
							location = scope:activity.activity_location
							NOR = {
								this = scope:host
								scope:activity.special_guest:honorary_guest ?= this
								scope:activity.special_guest:honorary_guest_regular ?= this
							}
						}
						add_to_list = characters
					}
				}
			}

			scripted_animation = {
				triggered_animation = {
					trigger = {
						scope:character = { has_trait = shy }
					}
					animation = { stress }
				}

				#Fallback
				animation = toast 
			}
		}
		
		guest = {
			camera = camera_body_left
			
			effect = {
				if = {
					limit = {
						scope:host.location = scope:activity.activity_location
						OR = {
							NOT = { exists = scope:activity.special_guest:honorary_guest }
							scope:activity.special_guest:honorary_guest.location ?= scope:activity.activity_location
						}
						OR = {
							NOT = { exists = scope:activity.special_guest:honorary_guest_regular }
							scope:activity.special_guest:honorary_guest_regular.location ?= scope:activity.activity_location
						}
						any_attending_character = {
							count >= 3
							location = scope:activity.activity_location
							NOR = {
								this = scope:host
								scope:activity.special_guest:honorary_guest ?= this
								scope:activity.special_guest:honorary_guest_regular ?= this
							}
							is_councillor_of = scope:host
						}
					}
					every_attending_character = {
						limit = {
							location = scope:activity.activity_location
							NOR = {
								this = scope:host
								scope:activity.special_guest:honorary_guest ?= this
								scope:activity.special_guest:honorary_guest_regular ?= this
							}
							is_councillor_of = scope:host
						}
						add_to_list = characters
					}
				}
				else_if = {
					limit = {
						scope:host.location = scope:activity.activity_location
						OR = {
							NOT = { exists = scope:activity.special_guest:honorary_guest }
							scope:activity.special_guest:honorary_guest.location ?= scope:activity.activity_location
						}
						OR = {
							NOT = { exists = scope:activity.special_guest:honorary_guest_regular }
							scope:activity.special_guest:honorary_guest_regular.location ?= scope:activity.activity_location
						}
						any_attending_character = {
							count >= 3
							location = scope:activity.activity_location
							NOR = {
								this = scope:host
								scope:activity.special_guest:honorary_guest ?= this
								scope:activity.special_guest:honorary_guest_regular ?= this
							}
							highest_held_title_tier >= tier_duchy
						}
					}
					every_attending_character = {
						limit = {
							location = scope:activity.activity_location
							NOR = {
								this = scope:host
								scope:activity.special_guest:honorary_guest ?= this
								scope:activity.special_guest:honorary_guest_regular ?= this
							}
							highest_held_title_tier >= tier_duchy
						}
						add_to_list = characters
					}
				}
				else_if = {
					limit = {
						scope:host.location = scope:activity.activity_location
						OR = {
							NOT = { exists = scope:activity.special_guest:honorary_guest }
							scope:activity.special_guest:honorary_guest.location ?= scope:activity.activity_location
						}
						OR = {
							NOT = { exists = scope:activity.special_guest:honorary_guest_regular }
							scope:activity.special_guest:honorary_guest_regular.location ?= scope:activity.activity_location
						}
						any_attending_character = {
							count >= 3
							location = scope:activity.activity_location
							NOR = {
								this = scope:host
								scope:activity.special_guest:honorary_guest ?= this
								scope:activity.special_guest:honorary_guest_regular ?= this
							}
							highest_held_title_tier >= tier_county
						}
					}
					every_attending_character = {
						limit = {
							location = scope:activity.activity_location
							NOR = {
								this = scope:host
								scope:activity.special_guest:honorary_guest ?= this
								scope:activity.special_guest:honorary_guest_regular ?= this
							}
							highest_held_title_tier >= tier_county
						}
						add_to_list = characters
					}
				}
				else_if = {
					limit = {
						scope:host.location = scope:activity.activity_location
						OR = {
							NOT = { exists = scope:activity.special_guest:honorary_guest }
							scope:activity.special_guest:honorary_guest.location ?= scope:activity.activity_location
						}
						OR = {
							NOT = { exists = scope:activity.special_guest:honorary_guest_regular }
							scope:activity.special_guest:honorary_guest_regular.location ?= scope:activity.activity_location
						}
						any_attending_character = {
							count >= 3
							location = scope:activity.activity_location
							NOR = {
								this = scope:host
								scope:activity.special_guest:honorary_guest ?= this
								scope:activity.special_guest:honorary_guest_regular ?= this
							}
							OR = {
								is_parent_of = scope:host
								is_close_or_extended_family_of = scope:host
							}
						}
					}
					every_attending_character = {
						limit = {
							location = scope:activity.activity_location
							NOR = {
								this = scope:host
								scope:activity.special_guest:honorary_guest ?= this
								scope:activity.special_guest:honorary_guest_regular ?= this
							}
							OR = {
								is_parent_of = scope:host
								is_close_or_extended_family_of = scope:host
							}
						}
						add_to_list = characters
					}
				}
				else_if = {
					limit = {
						scope:host.location = scope:activity.activity_location
						OR = {
							NOT = { exists = scope:activity.special_guest:honorary_guest }
							scope:activity.special_guest:honorary_guest.location ?= scope:activity.activity_location
						}
						OR = {
							NOT = { exists = scope:activity.special_guest:honorary_guest_regular }
							scope:activity.special_guest:honorary_guest_regular.location ?= scope:activity.activity_location
						}
					}
					every_attending_character = {
						limit = {
							location = scope:activity.activity_location
							NOR = {
								this = scope:host
								scope:activity.special_guest:honorary_guest ?= this
								scope:activity.special_guest:honorary_guest_regular ?= this
							}
						}
						add_to_list = characters
					}
				}
			}

			scripted_animation = {
				triggered_animation = {
					trigger = {
						scope:character = { has_trait = shy }
					}
					animation = { paranoia }
				}
				# triggered_animation = {
				# 	trigger = {
				# 	}
				# 	animation = { drink eavesdrop wedding_drunk }
				# }
				#Fallback
				animation = toast
			}
		}
	}

	###################
	# OPTIONS
	###################

	options = {

	}


	###################
	# PHASES
	###################

	# wait_time_before_start = { days = 2 }
	# max_guest_arrival_delay_time = { months = 2 }

	phases = {
		matchmake = {		
			order = 1
			is_predefined = yes

			is_shown = { always = yes }
			is_valid = {

			}

			on_phase_active = {
				# Sort some stuff on the host.
				if = {
					limit = { this = scope:host }

					scope:activity = { progress_activity_phase_after = { days = 2 } }
				}

				# if = {

				# 	# BIG TODO: if heir is in activity this will eb fired once, so set liege and heir scopes and only fire for leige
				# 	# - I could probably also reference using activty.specialguest stuff
				# 	limit = {
				# 		this = scope:activity.special_guest:match_recipient
				# 	}

				# 	scope:activity.special_guest:match_recipient = {
				# 		save_scope_as = match_recipient
				# 	}
				# }

				if = {
					limit = { 
						is_ai = no	
					}

					scope:activity.special_guest:match_recipient = {
						save_scope_as = match_recipient
					}

					trigger_event = {
						on_action = matchmaking_events
						days = 1
					}
				}
			}
			
			on_weekly_pulse = {
				if = { #host
					limit = {
						this = scope:host
					}
					# trigger_event = { on_action = entrance_feast_new_event_selection_tombola }
				}
				else_if = { #guest
					limit = {
						NOT = { this = scope:host }
					}
					# trigger_event = { on_action = entrance_feast_default_event_selection }
				}
			}
		}
	}

	ai_will_select_province = {
		# Base
		value = 469
	}

	###################
	# ACTIVITY-SPECIFIC PULSES
	###################
	
	pulse_actions = {
		entries = {

		}
		chance_of_no_event = 5
	}
	
	on_start = {
		debug_log = "AELURAN MATCHMAKING IS STARTING"
	}
	
	on_enter_passive_state = {
		debug_log = "AELURAN MATCHMAKING IN PASSIVE STATE"
	}

	# Effects run when the activity completes after its last phase
	# root = character in this phase
	# scope:activity = the activity
	# scope:host = host of the activity
	on_complete = {
		# Run conclusion stuff here
		if = {
			limit = { this = scope:host }

			scope:host = {
				if = {
					limit = {
						exists = var:matchmaking_character
					}
					remove_variable = matchmaking_character
				}
			}
		}
		# Conclusion event for guests
		else = {

		}

	}
}
