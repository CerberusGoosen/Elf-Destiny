is_of_any_royal_elf_bloodline = {
	OR = {
		has_trait = royal_elf_valerith
		has_trait = royal_elf_serelion
		has_trait = royal_elf_gwynthorn
		has_trait = royal_elf_thundarael
		has_trait = royal_elf_daelurin
	}
}

is_suitable_female_breeder_has_bloodline = {
	is_female = yes
	is_married = no
	is_betrothed = no
	AND = {
		age < 40
		age > 15
	}
	is_of_any_royal_elf_bloodline = yes
}

is_suitable_male_breeder_has_bloodline = {
	is_female = no
	is_married = no
	is_betrothed = no
	AND = {
		age < 40
		age > 15
	}
	is_of_any_royal_elf_bloodline = yes
}

is_suitable_female_breeder_no_bloodline = {
	is_female = yes
	is_married = no
	is_betrothed = no
	AND = {
		age < 30
		age > 15
	}
	genetic_worthiness > 6
}

is_suitable_male_breeder_no_bloodline = {
	is_female = yes
	is_married = no
	is_betrothed = no
	AND = {
		age < 30
		age > 15
	}
	genetic_worthiness > 6
}

# TODO:
# Aeluran available

family_option_available = {
	# TODO: any_living_character is probably not performant, can we do something more specific?
	trigger_if = {
		limit = { 
			scope:match_recipient = {
				is_female = no
			}
		}
		any_living_character = {
			is_suitable_female_elf_spouse = yes
			is_close_or_extended_family_of = scope:match_recipient
		}
	}

	trigger_if = {
		limit = { 
			scope:match_recipient = {
				is_female = yes
			}
		}
		any_living_character = {
			is_suitable_male_elf_spouse = yes
			is_close_or_extended_family_of = scope:match_recipient
		}
	}

}

# TODO: any_living_character is probably not performant, can we do something more specific?
# TODO: if we update alliance to include heirs of title holders, update here too
alliance_option_available = {
	trigger_if = { # Male Emperor
		limit = {
			highest_held_title_tier = tier_empire
			scope:match_recipient = {
				is_female = no
			}
		}
		any_living_character = {
			highest_held_title_tier = tier_empire
			OR = {
				is_suitable_female_elf_spouse = yes
				any_child = {
					is_suitable_female_elf_spouse = yes
				}
			}
		}
	}

	trigger_if = { # Female Empress 
		limit = {
			highest_held_title_tier = tier_empire
			scope:match_recipient = {
				is_female = yes
			}
		}
		any_living_character = {
			highest_held_title_tier = tier_empire
			OR = {
				is_suitable_male_elf_spouse = yes
				any_child = {
					is_suitable_male_elf_spouse = yes
				}
			}
		}
	}

	trigger_if = { # Male King
		limit = {
			highest_held_title_tier = tier_kingdom
			scope:match_recipient = {
				is_female = no
			}
		}
		any_living_character = {
			OR = {
				highest_held_title_tier = tier_kingdom
				highest_held_title_tier = tier_empire
			}
			OR = {
				is_suitable_female_elf_spouse = yes
				any_child = {
					is_suitable_female_elf_spouse = yes
				}
			}
		}
	}

	trigger_if = { # Female Queen
		limit = {
			highest_held_title_tier = tier_kingdom
			scope:match_recipient = {
				is_female = yes
			}
		}
		any_living_character = {
			OR = {
				highest_held_title_tier = tier_kingdom
				highest_held_title_tier = tier_empire
			}
			OR = {
				is_suitable_male_elf_spouse = yes
				any_child = {
					is_suitable_male_elf_spouse = yes
				}
			}
		}
	}

	trigger_if = { # Male Duke
		limit = {
			highest_held_title_tier = tier_duchy
			scope:match_recipient = {
				is_female = no
			}
		}
		any_living_character = {
			OR = {
				highest_held_title_tier = tier_duchy
				highest_held_title_tier = tier_kingdom
				highest_held_title_tier = tier_empire
			}
			OR = {
				is_suitable_female_elf_spouse = yes
				any_child = {
					is_suitable_female_elf_spouse = yes
				}
			}
		}
	}

	trigger_if = { # Female Duchess
		limit = {
			highest_held_title_tier = tier_duchy
			scope:match_recipient = {
				is_female = yes
			}
		}
		any_living_character = {
			OR = {
				highest_held_title_tier = tier_duchy
				highest_held_title_tier = tier_kingdom
				highest_held_title_tier = tier_empire
			}
			OR = {
				is_suitable_male_elf_spouse = yes
				any_child = {
					is_suitable_male_elf_spouse = yes
				}
			}
		}
	}

	trigger_if = { # Male Count
		limit = {
			highest_held_title_tier = tier_county
			scope:match_recipient = {
				is_female = no
			}
		}
		any_living_character = {
			OR = {
				highest_held_title_tier = tier_duchy
				highest_held_title_tier = tier_kingdom
			}
			OR = {
				is_suitable_female_elf_spouse = yes
				any_child = {
					is_suitable_female_elf_spouse = yes
				}
			}
		}
	}

	trigger_if = { # Female Countess
		limit = {
			highest_held_title_tier = tier_county
			scope:match_recipient = {
				is_female = yes
			}
		}
		any_living_character = {
			OR = {
				highest_held_title_tier = tier_duchy
				highest_held_title_tier = tier_kingdom
			}
			OR = {
				is_suitable_male_elf_spouse = yes
				any_child = {
					is_suitable_male_elf_spouse = yes
				}
			}
		}
	}
}

is_suitable_female_elf_spouse = {
	is_female = yes
	is_married = no
	is_betrothed = no
	is_any_elf_type = yes
	AND = {
		age < 35
		age > 13
	}
}

is_suitable_male_elf_spouse = {
	is_female = no
	is_married = no
	is_betrothed = no
	is_any_elf_type = yes
	AND = {
		age < 55
		age > 13
	}
}

is_elf_empress = {
	is_female = yes
	highest_held_title_tier = tier_empire
}

is_elf_emperor = {
	is_female = no
	highest_held_title_tier = tier_empire
}

is_elf_queen = {
	is_female = yes
	highest_held_title_tier = tier_kingdom
}

is_elf_king = {
	is_female = no
	highest_held_title_tier = tier_kingdom
}

is_elf_duchess = {
	is_female = yes
	highest_held_title_tier = tier_duchy
}

is_elf_duke = {
	is_female = no
	highest_held_title_tier = tier_duchy
}

is_elf_countess = {
	is_female = yes
	highest_held_title_tier = tier_kingdom
}

is_elf_count = {
	is_female = no
	highest_held_title_tier = tier_kingdom
}

alliance_compatible_female_empress = {
	is_female = yes
	is_married = no
	is_betrothed = no
	AND = {
		age < 35
		age > 13
	}
	highest_held_title_tier = tier_empire
}

alliance_compatible_male_emperor = {
	is_female = no
	is_married = no
	is_betrothed = no
	AND = {
		age < 55
		age > 13
	}
	highest_held_title_tier = tier_empire
}

alliance_compatible_female_queen_or_higher = {
	is_female = yes
	is_married = no
	is_betrothed = no
	AND = {
		age < 35
		age > 13
	}
	OR = {
		highest_held_title_tier = tier_kingdom
		highest_held_title_tier = tier_empire
	}
}

alliance_compatible_male_king_or_higher = {
	is_female = no
	is_married = no
	is_betrothed = no
	AND = {
		age < 55
		age > 13
	}
	OR = {
		highest_held_title_tier = tier_kingdom
		highest_held_title_tier = tier_empire
	}
}

alliance_compatible_female_duchess_or_higher = {
	is_female = yes
	is_married = no
	is_betrothed = no
	AND = {
		age < 35
		age > 13
	}
	OR = {
		highest_held_title_tier = tier_duchy
		highest_held_title_tier = tier_kingdom
		highest_held_title_tier = tier_empire
	}
}

alliance_compatible_male_duke_or_higher = {
	is_female = no
	is_married = no
	is_betrothed = no
	AND = {
		age < 55
		age > 13
	}
	OR = {
		highest_held_title_tier = tier_duchy
		highest_held_title_tier = tier_kingdom
		highest_held_title_tier = tier_empire
	}
}

alliance_compatible_female_duchess_to_queen = {
	is_female = yes
	is_married = no
	is_betrothed = no
	AND = {
		age < 35
		age > 13
	}
	OR = {
		highest_held_title_tier = tier_duchy
		highest_held_title_tier = tier_kingdom

	}
}

alliance_compatible_male_duke_to_king = {
	is_female = yes
	is_married = no
	is_betrothed = no
	AND = {
		age < 55
		age > 13
	}
	OR = {
		highest_held_title_tier = tier_duchy
		highest_held_title_tier = tier_kingdom

	}
}

# Match Options

match_choice_2_is_valid = {
	OR = {
		AND = {
			scope:match_choice_2 = flag:family
			exists = scope:match_option_family
		}
		AND = {
			scope:match_choice_2 = flag:alliance
			exists = scope:match_option_alliance
		}
		AND = {
			scope:match_choice_2 = flag:aeluran_matron
			exists = scope:match_option_aeluran
		}
		AND = {
			scope:match_choice_2 = flag:aeluran_sister
			exists = scope:match_option_aeluran
		}
		AND = {
			scope:match_choice_2 = flag:breeding_stock
			exists = scope:match_option_breeding_stock
		}
		AND = {
			scope:match_choice_2 = flag:twins
			AND = {
				exists = scope:match_option_twins_1
				exists = scope:match_option_twins_2
			}
		}
		AND = {
			scope:match_choice_2 = flag:triplets
			AND = {
				exists = scope:match_option_triplets_1
				exists = scope:match_option_triplets_2
				exists = scope:match_option_triplets_3
			}
		}
	}
}