elf_elective_potential_landed_candidate_trigger = {
	save_temporary_scope_as = potential_candidate
	has_same_government = scope:holder
	#Either the candidate is in the realm, or the title is independent, or the realm of the title does NOT have protected inheritance.
	OR = {
		any_liege_or_above = {
			this = scope:holder
		}
		# scope:holder = { is_independent_ruler = yes }
		scope:holder = {
			exists = liege
			NOT = {
				any_liege_or_above = {
					has_realm_law_flag = titles_cannot_leave_realm_on_succession
					NOR = {
						this = scope:potential_candidate
						target_is_vassal_or_below = scope:potential_candidate
					}
				}
			}
		}
	}
	# OR = { #If the title controls the faith, candidates must be of the same faith.
	# 	scope:holder = {
	# 		NAND = {
	# 			exists = faith.religious_head
	# 			this = faith.religious_head
	# 		}
	# 	}
	# 	this.faith = scope:holder.faith
	# }
	has_unelectable_trait_trigger = no
	has_unelectable_government_trigger = no
}

elf_elective_potential_landless_dynastic_candidate_trigger = {
	save_temporary_scope_as = potential_candidate
	#Either the candidate is in the realm, or is landless, or the title is independent, or the realm of the title does NOT have protected inheritance.
	OR = {
		any_liege_or_above = {
			this = scope:holder
		}
		is_ruler = no
		# scope:holder = { is_independent_ruler = yes }
		scope:holder = {
			exists = liege
			NOT = {
				any_liege_or_above = {
					has_realm_law_flag = titles_cannot_leave_realm_on_succession
					NOR = {
						this = scope:potential_candidate
						target_is_vassal_or_below = scope:potential_candidate
					}
				}
			}
		}
	}
	NOT = { #Landless characters should not be heirs to Theocracies/Republics.
		any_heir_title = {
			exists = holder
			holder = {
				has_unelectable_government_trigger = yes
			}
		}
	}
	# OR = { #If the title controls the faith, candidates must be of the same faith.
	# 	scope:holder = {
	# 		NAND = {
	# 			exists = faith.religious_head
	# 			this = scope:holder.faith.religious_head
	# 		}
	# 	}
	# 	faith = scope:holder.faith
	# }

	# #Grandkid block
	# trigger_if = {
	# 	limit = {
	# 		NOR = {
	# 			#Check to see that you're not the product of incest
	# 			AND = {
	# 				exists = mother
	# 				exists = father
	# 				mother = { 
	# 					relation_with_character_is_incestuous_in_my_or_lieges_faith_trigger = { CHARACTER = prev.father }
	# 				}
	# 			}
	# 			#Let's make the incredibly bold assumption that if incest is completely allowed we'll just default to check the child instead of parents
	# 			scope:holder.faith = { 
	# 				has_doctrine_parameter = consanguinity_unrestricted_incest 
	# 			}
	# 		}
	# 	}
	# 	# We don't want grandkids to show as candidates if their parent is eligable and still alive
	# 	NOR = {
	# 		AND = {
	# 			exists = mother
	# 			mother = {
	# 				is_alive = yes
	# 				parent_for_elective_succession_trigger = yes
	# 			}
	# 		}
	# 		AND = {
	# 			exists = father
	# 			father = {
	# 				is_alive = yes
	# 				parent_for_elective_succession_trigger = yes
	# 			}
	# 		}
	# 	}
	# }
	# #if incest is allowed, check if you're the child of the holder since you can be both their kid and grandkid at the same time... 
	# trigger_else_if = {
	# 	limit = {
	# 		OR = {
	# 			AND = {
	# 				exists = mother
	# 				mother = {
	# 					is_alive = yes
	# 				}
	# 			}
	# 			AND = {
	# 				exists = father
	# 				father = {
	# 					is_alive = yes
	# 				}
	# 			}
	# 		}
	# 	}
	# 	parent_for_elective_succession_trigger = yes 
	# }
	# trigger_else = {
	# 	#Your parents are dead and you're eligible for title inheritance. Congrats.
	# }
	
	has_unelectable_trait_trigger = no
	has_unelectable_government_trigger = no
}